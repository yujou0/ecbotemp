{
  "version": 3,
  "sources": ["../../jsencrypt/lib/lib/jsbn/util.js", "../../jsencrypt/lib/lib/jsbn/base64.js", "../../jsencrypt/lib/lib/asn1js/hex.js", "../../jsencrypt/lib/lib/asn1js/base64.js", "../../jsencrypt/lib/lib/asn1js/int10.js", "../../jsencrypt/lib/lib/asn1js/asn1.js", "../../jsencrypt/lib/lib/jsbn/jsbn.js", "../../jsencrypt/lib/lib/jsbn/prng4.js", "../../jsencrypt/lib/lib/jsbn/rng.js", "../../jsencrypt/lib/lib/jsbn/rsa.js", "../../jsencrypt/lib/lib/jsrsasign/yahoo.js", "../../jsencrypt/lib/lib/jsrsasign/asn1-1.0.js", "../../jsencrypt/lib/JSEncryptRSAKey.js", "../../jsencrypt/lib/JSEncrypt.js", "../../jsencrypt/lib/index.js"],
  "sourcesContent": ["var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\nexport function int2char(n) {\r\n    return BI_RM.charAt(n);\r\n}\r\n//#region BIT_OPERATIONS\r\n// (public) this & a\r\nexport function op_and(x, y) {\r\n    return x & y;\r\n}\r\n// (public) this | a\r\nexport function op_or(x, y) {\r\n    return x | y;\r\n}\r\n// (public) this ^ a\r\nexport function op_xor(x, y) {\r\n    return x ^ y;\r\n}\r\n// (public) this & ~a\r\nexport function op_andnot(x, y) {\r\n    return x & ~y;\r\n}\r\n// return index of lowest 1-bit in x, x < 2^31\r\nexport function lbit(x) {\r\n    if (x == 0) {\r\n        return -1;\r\n    }\r\n    var r = 0;\r\n    if ((x & 0xffff) == 0) {\r\n        x >>= 16;\r\n        r += 16;\r\n    }\r\n    if ((x & 0xff) == 0) {\r\n        x >>= 8;\r\n        r += 8;\r\n    }\r\n    if ((x & 0xf) == 0) {\r\n        x >>= 4;\r\n        r += 4;\r\n    }\r\n    if ((x & 3) == 0) {\r\n        x >>= 2;\r\n        r += 2;\r\n    }\r\n    if ((x & 1) == 0) {\r\n        ++r;\r\n    }\r\n    return r;\r\n}\r\n// return number of 1 bits in x\r\nexport function cbit(x) {\r\n    var r = 0;\r\n    while (x != 0) {\r\n        x &= x - 1;\r\n        ++r;\r\n    }\r\n    return r;\r\n}\r\n//#endregion BIT_OPERATIONS\r\n", "import { int2char } from \"./util\";\r\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\nvar b64pad = \"=\";\r\nexport function hex2b64(h) {\r\n    var i;\r\n    var c;\r\n    var ret = \"\";\r\n    for (i = 0; i + 3 <= h.length; i += 3) {\r\n        c = parseInt(h.substring(i, i + 3), 16);\r\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\r\n    }\r\n    if (i + 1 == h.length) {\r\n        c = parseInt(h.substring(i, i + 1), 16);\r\n        ret += b64map.charAt(c << 2);\r\n    }\r\n    else if (i + 2 == h.length) {\r\n        c = parseInt(h.substring(i, i + 2), 16);\r\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\r\n    }\r\n    while ((ret.length & 3) > 0) {\r\n        ret += b64pad;\r\n    }\r\n    return ret;\r\n}\r\n// convert a base64 string to hex\r\nexport function b64tohex(s) {\r\n    var ret = \"\";\r\n    var i;\r\n    var k = 0; // b64 state, 0-3\r\n    var slop = 0;\r\n    for (i = 0; i < s.length; ++i) {\r\n        if (s.charAt(i) == b64pad) {\r\n            break;\r\n        }\r\n        var v = b64map.indexOf(s.charAt(i));\r\n        if (v < 0) {\r\n            continue;\r\n        }\r\n        if (k == 0) {\r\n            ret += int2char(v >> 2);\r\n            slop = v & 3;\r\n            k = 1;\r\n        }\r\n        else if (k == 1) {\r\n            ret += int2char((slop << 2) | (v >> 4));\r\n            slop = v & 0xf;\r\n            k = 2;\r\n        }\r\n        else if (k == 2) {\r\n            ret += int2char(slop);\r\n            ret += int2char(v >> 2);\r\n            slop = v & 3;\r\n            k = 3;\r\n        }\r\n        else {\r\n            ret += int2char((slop << 2) | (v >> 4));\r\n            ret += int2char(v & 0xf);\r\n            k = 0;\r\n        }\r\n    }\r\n    if (k == 1) {\r\n        ret += int2char(slop << 2);\r\n    }\r\n    return ret;\r\n}\r\n// convert a base64 string to a byte/number array\r\nexport function b64toBA(s) {\r\n    // piggyback on b64tohex for now, optimize later\r\n    var h = b64tohex(s);\r\n    var i;\r\n    var a = [];\r\n    for (i = 0; 2 * i < h.length; ++i) {\r\n        a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\r\n    }\r\n    return a;\r\n}\r\n", "// Hex JavaScript decoder\r\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\r\n// Permission to use, copy, modify, and/or distribute this software for any\r\n// purpose with or without fee is hereby granted, provided that the above\r\n// copyright notice and this permission notice appear in all copies.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\r\nvar decoder;\r\nexport var Hex = {\r\n    decode: function (a) {\r\n        var i;\r\n        if (decoder === undefined) {\r\n            var hex = \"0123456789ABCDEF\";\r\n            var ignore = \" \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\r\n            decoder = {};\r\n            for (i = 0; i < 16; ++i) {\r\n                decoder[hex.charAt(i)] = i;\r\n            }\r\n            hex = hex.toLowerCase();\r\n            for (i = 10; i < 16; ++i) {\r\n                decoder[hex.charAt(i)] = i;\r\n            }\r\n            for (i = 0; i < ignore.length; ++i) {\r\n                decoder[ignore.charAt(i)] = -1;\r\n            }\r\n        }\r\n        var out = [];\r\n        var bits = 0;\r\n        var char_count = 0;\r\n        for (i = 0; i < a.length; ++i) {\r\n            var c = a.charAt(i);\r\n            if (c == \"=\") {\r\n                break;\r\n            }\r\n            c = decoder[c];\r\n            if (c == -1) {\r\n                continue;\r\n            }\r\n            if (c === undefined) {\r\n                throw new Error(\"Illegal character at offset \" + i);\r\n            }\r\n            bits |= c;\r\n            if (++char_count >= 2) {\r\n                out[out.length] = bits;\r\n                bits = 0;\r\n                char_count = 0;\r\n            }\r\n            else {\r\n                bits <<= 4;\r\n            }\r\n        }\r\n        if (char_count) {\r\n            throw new Error(\"Hex encoding incomplete: 4 bits missing\");\r\n        }\r\n        return out;\r\n    }\r\n};\r\n", "// Base64 JavaScript decoder\r\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\r\n// Permission to use, copy, modify, and/or distribute this software for any\r\n// purpose with or without fee is hereby granted, provided that the above\r\n// copyright notice and this permission notice appear in all copies.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\r\nvar decoder;\r\nexport var Base64 = {\r\n    decode: function (a) {\r\n        var i;\r\n        if (decoder === undefined) {\r\n            var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n            var ignore = \"= \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\r\n            decoder = Object.create(null);\r\n            for (i = 0; i < 64; ++i) {\r\n                decoder[b64.charAt(i)] = i;\r\n            }\r\n            decoder['-'] = 62; //+\r\n            decoder['_'] = 63; //-\r\n            for (i = 0; i < ignore.length; ++i) {\r\n                decoder[ignore.charAt(i)] = -1;\r\n            }\r\n        }\r\n        var out = [];\r\n        var bits = 0;\r\n        var char_count = 0;\r\n        for (i = 0; i < a.length; ++i) {\r\n            var c = a.charAt(i);\r\n            if (c == \"=\") {\r\n                break;\r\n            }\r\n            c = decoder[c];\r\n            if (c == -1) {\r\n                continue;\r\n            }\r\n            if (c === undefined) {\r\n                throw new Error(\"Illegal character at offset \" + i);\r\n            }\r\n            bits |= c;\r\n            if (++char_count >= 4) {\r\n                out[out.length] = (bits >> 16);\r\n                out[out.length] = (bits >> 8) & 0xFF;\r\n                out[out.length] = bits & 0xFF;\r\n                bits = 0;\r\n                char_count = 0;\r\n            }\r\n            else {\r\n                bits <<= 6;\r\n            }\r\n        }\r\n        switch (char_count) {\r\n            case 1:\r\n                throw new Error(\"Base64 encoding incomplete: at least 2 bits missing\");\r\n            case 2:\r\n                out[out.length] = (bits >> 10);\r\n                break;\r\n            case 3:\r\n                out[out.length] = (bits >> 16);\r\n                out[out.length] = (bits >> 8) & 0xFF;\r\n                break;\r\n        }\r\n        return out;\r\n    },\r\n    re: /-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----|begin-base64[^\\n]+\\n([A-Za-z0-9+\\/=\\s]+)====/,\r\n    unarmor: function (a) {\r\n        var m = Base64.re.exec(a);\r\n        if (m) {\r\n            if (m[1]) {\r\n                a = m[1];\r\n            }\r\n            else if (m[2]) {\r\n                a = m[2];\r\n            }\r\n            else {\r\n                throw new Error(\"RegExp out of sync\");\r\n            }\r\n        }\r\n        return Base64.decode(a);\r\n    }\r\n};\r\n", "// Big integer base-10 printing library\r\n// Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>\r\n// Permission to use, copy, modify, and/or distribute this software for any\r\n// purpose with or without fee is hereby granted, provided that the above\r\n// copyright notice and this permission notice appear in all copies.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\r\nvar max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256\r\nvar Int10 = /** @class */ (function () {\r\n    function Int10(value) {\r\n        this.buf = [+value || 0];\r\n    }\r\n    Int10.prototype.mulAdd = function (m, c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf;\r\n        var l = b.length;\r\n        var i;\r\n        var t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] * m + c;\r\n            if (t < max) {\r\n                c = 0;\r\n            }\r\n            else {\r\n                c = 0 | (t / max);\r\n                t -= c * max;\r\n            }\r\n            b[i] = t;\r\n        }\r\n        if (c > 0) {\r\n            b[i] = c;\r\n        }\r\n    };\r\n    Int10.prototype.sub = function (c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf;\r\n        var l = b.length;\r\n        var i;\r\n        var t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] - c;\r\n            if (t < 0) {\r\n                t += max;\r\n                c = 1;\r\n            }\r\n            else {\r\n                c = 0;\r\n            }\r\n            b[i] = t;\r\n        }\r\n        while (b[b.length - 1] === 0) {\r\n            b.pop();\r\n        }\r\n    };\r\n    Int10.prototype.toString = function (base) {\r\n        if ((base || 10) != 10) {\r\n            throw new Error(\"only base 10 is supported\");\r\n        }\r\n        var b = this.buf;\r\n        var s = b[b.length - 1].toString();\r\n        for (var i = b.length - 2; i >= 0; --i) {\r\n            s += (max + b[i]).toString().substring(1);\r\n        }\r\n        return s;\r\n    };\r\n    Int10.prototype.valueOf = function () {\r\n        var b = this.buf;\r\n        var v = 0;\r\n        for (var i = b.length - 1; i >= 0; --i) {\r\n            v = v * max + b[i];\r\n        }\r\n        return v;\r\n    };\r\n    Int10.prototype.simplify = function () {\r\n        var b = this.buf;\r\n        return (b.length == 1) ? b[0] : this;\r\n    };\r\n    return Int10;\r\n}());\r\nexport { Int10 };\r\n", "// ASN.1 JavaScript decoder\r\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\r\n// Permission to use, copy, modify, and/or distribute this software for any\r\n// purpose with or without fee is hereby granted, provided that the above\r\n// copyright notice and this permission notice appear in all copies.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\r\n/*global oids */\r\nimport { Int10 } from \"./int10\";\r\nvar ellipsis = \"\\u2026\";\r\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\r\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\r\nfunction stringCut(str, len) {\r\n    if (str.length > len) {\r\n        str = str.substring(0, len) + ellipsis;\r\n    }\r\n    return str;\r\n}\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(enc, pos) {\r\n        this.hexDigits = \"0123456789ABCDEF\";\r\n        if (enc instanceof Stream) {\r\n            this.enc = enc.enc;\r\n            this.pos = enc.pos;\r\n        }\r\n        else {\r\n            // enc should be an array or a binary string\r\n            this.enc = enc;\r\n            this.pos = pos;\r\n        }\r\n    }\r\n    Stream.prototype.get = function (pos) {\r\n        if (pos === undefined) {\r\n            pos = this.pos++;\r\n        }\r\n        if (pos >= this.enc.length) {\r\n            throw new Error(\"Requesting byte offset \".concat(pos, \" on a stream of length \").concat(this.enc.length));\r\n        }\r\n        return (\"string\" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];\r\n    };\r\n    Stream.prototype.hexByte = function (b) {\r\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\r\n    };\r\n    Stream.prototype.hexDump = function (start, end, raw) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i) {\r\n            s += this.hexByte(this.get(i));\r\n            if (raw !== true) {\r\n                switch (i & 0xF) {\r\n                    case 0x7:\r\n                        s += \"  \";\r\n                        break;\r\n                    case 0xF:\r\n                        s += \"\\n\";\r\n                        break;\r\n                    default:\r\n                        s += \" \";\r\n                }\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n    Stream.prototype.isASCII = function (start, end) {\r\n        for (var i = start; i < end; ++i) {\r\n            var c = this.get(i);\r\n            if (c < 32 || c > 176) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Stream.prototype.parseStringISO = function (start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i) {\r\n            s += String.fromCharCode(this.get(i));\r\n        }\r\n        return s;\r\n    };\r\n    Stream.prototype.parseStringUTF = function (start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end;) {\r\n            var c = this.get(i++);\r\n            if (c < 128) {\r\n                s += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\r\n            }\r\n            else {\r\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n    Stream.prototype.parseStringBMP = function (start, end) {\r\n        var str = \"\";\r\n        var hi;\r\n        var lo;\r\n        for (var i = start; i < end;) {\r\n            hi = this.get(i++);\r\n            lo = this.get(i++);\r\n            str += String.fromCharCode((hi << 8) | lo);\r\n        }\r\n        return str;\r\n    };\r\n    Stream.prototype.parseTime = function (start, end, shortYear) {\r\n        var s = this.parseStringISO(start, end);\r\n        var m = (shortYear ? reTimeS : reTimeL).exec(s);\r\n        if (!m) {\r\n            return \"Unrecognized time: \" + s;\r\n        }\r\n        if (shortYear) {\r\n            // to avoid querying the timer, use the fixed range [1970, 2069]\r\n            // it will conform with ITU X.400 [-10, +40] sliding window until 2030\r\n            m[1] = +m[1];\r\n            m[1] += (+m[1] < 70) ? 2000 : 1900;\r\n        }\r\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\r\n        if (m[5]) {\r\n            s += \":\" + m[5];\r\n            if (m[6]) {\r\n                s += \":\" + m[6];\r\n                if (m[7]) {\r\n                    s += \".\" + m[7];\r\n                }\r\n            }\r\n        }\r\n        if (m[8]) {\r\n            s += \" UTC\";\r\n            if (m[8] != \"Z\") {\r\n                s += m[8];\r\n                if (m[9]) {\r\n                    s += \":\" + m[9];\r\n                }\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n    Stream.prototype.parseInteger = function (start, end) {\r\n        var v = this.get(start);\r\n        var neg = (v > 127);\r\n        var pad = neg ? 255 : 0;\r\n        var len;\r\n        var s = \"\";\r\n        // skip unuseful bits (not allowed in DER)\r\n        while (v == pad && ++start < end) {\r\n            v = this.get(start);\r\n        }\r\n        len = end - start;\r\n        if (len === 0) {\r\n            return neg ? -1 : 0;\r\n        }\r\n        // show bit length of huge integers\r\n        if (len > 4) {\r\n            s = v;\r\n            len <<= 3;\r\n            while (((+s ^ pad) & 0x80) == 0) {\r\n                s = +s << 1;\r\n                --len;\r\n            }\r\n            s = \"(\" + len + \" bit)\\n\";\r\n        }\r\n        // decode the integer\r\n        if (neg) {\r\n            v = v - 256;\r\n        }\r\n        var n = new Int10(v);\r\n        for (var i = start + 1; i < end; ++i) {\r\n            n.mulAdd(256, this.get(i));\r\n        }\r\n        return s + n.toString();\r\n    };\r\n    Stream.prototype.parseBitString = function (start, end, maxLength) {\r\n        var unusedBit = this.get(start);\r\n        var lenBit = ((end - start - 1) << 3) - unusedBit;\r\n        var intro = \"(\" + lenBit + \" bit)\\n\";\r\n        var s = \"\";\r\n        for (var i = start + 1; i < end; ++i) {\r\n            var b = this.get(i);\r\n            var skip = (i == end - 1) ? unusedBit : 0;\r\n            for (var j = 7; j >= skip; --j) {\r\n                s += (b >> j) & 1 ? \"1\" : \"0\";\r\n            }\r\n            if (s.length > maxLength) {\r\n                return intro + stringCut(s, maxLength);\r\n            }\r\n        }\r\n        return intro + s;\r\n    };\r\n    Stream.prototype.parseOctetString = function (start, end, maxLength) {\r\n        if (this.isASCII(start, end)) {\r\n            return stringCut(this.parseStringISO(start, end), maxLength);\r\n        }\r\n        var len = end - start;\r\n        var s = \"(\" + len + \" byte)\\n\";\r\n        maxLength /= 2; // we work in bytes\r\n        if (len > maxLength) {\r\n            end = start + maxLength;\r\n        }\r\n        for (var i = start; i < end; ++i) {\r\n            s += this.hexByte(this.get(i));\r\n        }\r\n        if (len > maxLength) {\r\n            s += ellipsis;\r\n        }\r\n        return s;\r\n    };\r\n    Stream.prototype.parseOID = function (start, end, maxLength) {\r\n        var s = \"\";\r\n        var n = new Int10();\r\n        var bits = 0;\r\n        for (var i = start; i < end; ++i) {\r\n            var v = this.get(i);\r\n            n.mulAdd(128, v & 0x7F);\r\n            bits += 7;\r\n            if (!(v & 0x80)) { // finished\r\n                if (s === \"\") {\r\n                    n = n.simplify();\r\n                    if (n instanceof Int10) {\r\n                        n.sub(80);\r\n                        s = \"2.\" + n.toString();\r\n                    }\r\n                    else {\r\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\r\n                        s = m + \".\" + (n - m * 40);\r\n                    }\r\n                }\r\n                else {\r\n                    s += \".\" + n.toString();\r\n                }\r\n                if (s.length > maxLength) {\r\n                    return stringCut(s, maxLength);\r\n                }\r\n                n = new Int10();\r\n                bits = 0;\r\n            }\r\n        }\r\n        if (bits > 0) {\r\n            s += \".incomplete\";\r\n        }\r\n        return s;\r\n    };\r\n    return Stream;\r\n}());\r\nexport { Stream };\r\nvar ASN1 = /** @class */ (function () {\r\n    function ASN1(stream, header, length, tag, sub) {\r\n        if (!(tag instanceof ASN1Tag)) {\r\n            throw new Error(\"Invalid tag value.\");\r\n        }\r\n        this.stream = stream;\r\n        this.header = header;\r\n        this.length = length;\r\n        this.tag = tag;\r\n        this.sub = sub;\r\n    }\r\n    ASN1.prototype.typeName = function () {\r\n        switch (this.tag.tagClass) {\r\n            case 0: // universal\r\n                switch (this.tag.tagNumber) {\r\n                    case 0x00:\r\n                        return \"EOC\";\r\n                    case 0x01:\r\n                        return \"BOOLEAN\";\r\n                    case 0x02:\r\n                        return \"INTEGER\";\r\n                    case 0x03:\r\n                        return \"BIT_STRING\";\r\n                    case 0x04:\r\n                        return \"OCTET_STRING\";\r\n                    case 0x05:\r\n                        return \"NULL\";\r\n                    case 0x06:\r\n                        return \"OBJECT_IDENTIFIER\";\r\n                    case 0x07:\r\n                        return \"ObjectDescriptor\";\r\n                    case 0x08:\r\n                        return \"EXTERNAL\";\r\n                    case 0x09:\r\n                        return \"REAL\";\r\n                    case 0x0A:\r\n                        return \"ENUMERATED\";\r\n                    case 0x0B:\r\n                        return \"EMBEDDED_PDV\";\r\n                    case 0x0C:\r\n                        return \"UTF8String\";\r\n                    case 0x10:\r\n                        return \"SEQUENCE\";\r\n                    case 0x11:\r\n                        return \"SET\";\r\n                    case 0x12:\r\n                        return \"NumericString\";\r\n                    case 0x13:\r\n                        return \"PrintableString\"; // ASCII subset\r\n                    case 0x14:\r\n                        return \"TeletexString\"; // aka T61String\r\n                    case 0x15:\r\n                        return \"VideotexString\";\r\n                    case 0x16:\r\n                        return \"IA5String\"; // ASCII\r\n                    case 0x17:\r\n                        return \"UTCTime\";\r\n                    case 0x18:\r\n                        return \"GeneralizedTime\";\r\n                    case 0x19:\r\n                        return \"GraphicString\";\r\n                    case 0x1A:\r\n                        return \"VisibleString\"; // ASCII subset\r\n                    case 0x1B:\r\n                        return \"GeneralString\";\r\n                    case 0x1C:\r\n                        return \"UniversalString\";\r\n                    case 0x1E:\r\n                        return \"BMPString\";\r\n                }\r\n                return \"Universal_\" + this.tag.tagNumber.toString();\r\n            case 1:\r\n                return \"Application_\" + this.tag.tagNumber.toString();\r\n            case 2:\r\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; // Context\r\n            case 3:\r\n                return \"Private_\" + this.tag.tagNumber.toString();\r\n        }\r\n    };\r\n    ASN1.prototype.content = function (maxLength) {\r\n        if (this.tag === undefined) {\r\n            return null;\r\n        }\r\n        if (maxLength === undefined) {\r\n            maxLength = Infinity;\r\n        }\r\n        var content = this.posContent();\r\n        var len = Math.abs(this.length);\r\n        if (!this.tag.isUniversal()) {\r\n            if (this.sub !== null) {\r\n                return \"(\" + this.sub.length + \" elem)\";\r\n            }\r\n            return this.stream.parseOctetString(content, content + len, maxLength);\r\n        }\r\n        switch (this.tag.tagNumber) {\r\n            case 0x01: // BOOLEAN\r\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\r\n            case 0x02: // INTEGER\r\n                return this.stream.parseInteger(content, content + len);\r\n            case 0x03: // BIT_STRING\r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseBitString(content, content + len, maxLength);\r\n            case 0x04: // OCTET_STRING\r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseOctetString(content, content + len, maxLength);\r\n            // case 0x05: // NULL\r\n            case 0x06: // OBJECT_IDENTIFIER\r\n                return this.stream.parseOID(content, content + len, maxLength);\r\n            // case 0x07: // ObjectDescriptor\r\n            // case 0x08: // EXTERNAL\r\n            // case 0x09: // REAL\r\n            // case 0x0A: // ENUMERATED\r\n            // case 0x0B: // EMBEDDED_PDV\r\n            case 0x10: // SEQUENCE\r\n            case 0x11: // SET\r\n                if (this.sub !== null) {\r\n                    return \"(\" + this.sub.length + \" elem)\";\r\n                }\r\n                else {\r\n                    return \"(no elem)\";\r\n                }\r\n            case 0x0C: // UTF8String\r\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\r\n            case 0x12: // NumericString\r\n            case 0x13: // PrintableString\r\n            case 0x14: // TeletexString\r\n            case 0x15: // VideotexString\r\n            case 0x16: // IA5String\r\n            // case 0x19: // GraphicString\r\n            case 0x1A: // VisibleString\r\n                // case 0x1B: // GeneralString\r\n                // case 0x1C: // UniversalString\r\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\r\n            case 0x1E: // BMPString\r\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\r\n            case 0x17: // UTCTime\r\n            case 0x18: // GeneralizedTime\r\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\r\n        }\r\n        return null;\r\n    };\r\n    ASN1.prototype.toString = function () {\r\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? \"null\" : this.sub.length) + \"]\";\r\n    };\r\n    ASN1.prototype.toPrettyString = function (indent) {\r\n        if (indent === undefined) {\r\n            indent = \"\";\r\n        }\r\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\r\n        if (this.length >= 0) {\r\n            s += \"+\";\r\n        }\r\n        s += this.length;\r\n        if (this.tag.tagConstructed) {\r\n            s += \" (constructed)\";\r\n        }\r\n        else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {\r\n            s += \" (encapsulates)\";\r\n        }\r\n        s += \"\\n\";\r\n        if (this.sub !== null) {\r\n            indent += \"  \";\r\n            for (var i = 0, max = this.sub.length; i < max; ++i) {\r\n                s += this.sub[i].toPrettyString(indent);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n    ASN1.prototype.posStart = function () {\r\n        return this.stream.pos;\r\n    };\r\n    ASN1.prototype.posContent = function () {\r\n        return this.stream.pos + this.header;\r\n    };\r\n    ASN1.prototype.posEnd = function () {\r\n        return this.stream.pos + this.header + Math.abs(this.length);\r\n    };\r\n    ASN1.prototype.toHexString = function () {\r\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\r\n    };\r\n    ASN1.decodeLength = function (stream) {\r\n        var buf = stream.get();\r\n        var len = buf & 0x7F;\r\n        if (len == buf) {\r\n            return len;\r\n        }\r\n        // no reason to use Int10, as it would be a huge buffer anyways\r\n        if (len > 6) {\r\n            throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\r\n        }\r\n        if (len === 0) {\r\n            return null;\r\n        } // undefined\r\n        buf = 0;\r\n        for (var i = 0; i < len; ++i) {\r\n            buf = (buf * 256) + stream.get();\r\n        }\r\n        return buf;\r\n    };\r\n    /**\r\n     * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\r\n     * @returns {string}\r\n     * @public\r\n     */\r\n    ASN1.prototype.getHexStringValue = function () {\r\n        var hexString = this.toHexString();\r\n        var offset = this.header * 2;\r\n        var length = this.length * 2;\r\n        return hexString.substr(offset, length);\r\n    };\r\n    ASN1.decode = function (str) {\r\n        var stream;\r\n        if (!(str instanceof Stream)) {\r\n            stream = new Stream(str, 0);\r\n        }\r\n        else {\r\n            stream = str;\r\n        }\r\n        var streamStart = new Stream(stream);\r\n        var tag = new ASN1Tag(stream);\r\n        var len = ASN1.decodeLength(stream);\r\n        var start = stream.pos;\r\n        var header = start - streamStart.pos;\r\n        var sub = null;\r\n        var getSub = function () {\r\n            var ret = [];\r\n            if (len !== null) {\r\n                // definite length\r\n                var end = start + len;\r\n                while (stream.pos < end) {\r\n                    ret[ret.length] = ASN1.decode(stream);\r\n                }\r\n                if (stream.pos != end) {\r\n                    throw new Error(\"Content size is not correct for container starting at offset \" + start);\r\n                }\r\n            }\r\n            else {\r\n                // undefined length\r\n                try {\r\n                    for (;;) {\r\n                        var s = ASN1.decode(stream);\r\n                        if (s.tag.isEOC()) {\r\n                            break;\r\n                        }\r\n                        ret[ret.length] = s;\r\n                    }\r\n                    len = start - stream.pos; // undefined lengths are represented as negative values\r\n                }\r\n                catch (e) {\r\n                    throw new Error(\"Exception while decoding undefined length content: \" + e);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        if (tag.tagConstructed) {\r\n            // must have valid content\r\n            sub = getSub();\r\n        }\r\n        else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\r\n            // sometimes BitString and OctetString are used to encapsulate ASN.1\r\n            try {\r\n                if (tag.tagNumber == 0x03) {\r\n                    if (stream.get() != 0) {\r\n                        throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\r\n                    }\r\n                }\r\n                sub = getSub();\r\n                for (var i = 0; i < sub.length; ++i) {\r\n                    if (sub[i].tag.isEOC()) {\r\n                        throw new Error(\"EOC is not supposed to be actual content.\");\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                // but silently ignore when they don't\r\n                sub = null;\r\n            }\r\n        }\r\n        if (sub === null) {\r\n            if (len === null) {\r\n                throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\r\n            }\r\n            stream.pos = start + Math.abs(len);\r\n        }\r\n        return new ASN1(streamStart, header, len, tag, sub);\r\n    };\r\n    return ASN1;\r\n}());\r\nexport { ASN1 };\r\nvar ASN1Tag = /** @class */ (function () {\r\n    function ASN1Tag(stream) {\r\n        var buf = stream.get();\r\n        this.tagClass = buf >> 6;\r\n        this.tagConstructed = ((buf & 0x20) !== 0);\r\n        this.tagNumber = buf & 0x1F;\r\n        if (this.tagNumber == 0x1F) { // long tag\r\n            var n = new Int10();\r\n            do {\r\n                buf = stream.get();\r\n                n.mulAdd(128, buf & 0x7F);\r\n            } while (buf & 0x80);\r\n            this.tagNumber = n.simplify();\r\n        }\r\n    }\r\n    ASN1Tag.prototype.isUniversal = function () {\r\n        return this.tagClass === 0x00;\r\n    };\r\n    ASN1Tag.prototype.isEOC = function () {\r\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\r\n    };\r\n    return ASN1Tag;\r\n}());\r\nexport { ASN1Tag };\r\n", "// Copyright (c) 2005  Tom Wu\r\n// All Rights Reserved.\r\n// See \"LICENSE\" for details.\r\n// Basic JavaScript BN library - subset useful for RSA encryption.\r\nimport { cbit, int2char, lbit, op_and, op_andnot, op_or, op_xor } from \"./util\";\r\n// Bits per digit\r\nvar dbits;\r\n// JavaScript engine analysis\r\nvar canary = 0xdeadbeefcafe;\r\nvar j_lm = ((canary & 0xffffff) == 0xefcafe);\r\n//#region\r\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\r\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\r\n//#endregion\r\n// (public) Constructor\r\nvar BigInteger = /** @class */ (function () {\r\n    function BigInteger(a, b, c) {\r\n        if (a != null) {\r\n            if (\"number\" == typeof a) {\r\n                this.fromNumber(a, b, c);\r\n            }\r\n            else if (b == null && \"string\" != typeof a) {\r\n                this.fromString(a, 256);\r\n            }\r\n            else {\r\n                this.fromString(a, b);\r\n            }\r\n        }\r\n    }\r\n    //#region PUBLIC\r\n    // BigInteger.prototype.toString = bnToString;\r\n    // (public) return string representation in given radix\r\n    BigInteger.prototype.toString = function (b) {\r\n        if (this.s < 0) {\r\n            return \"-\" + this.negate().toString(b);\r\n        }\r\n        var k;\r\n        if (b == 16) {\r\n            k = 4;\r\n        }\r\n        else if (b == 8) {\r\n            k = 3;\r\n        }\r\n        else if (b == 2) {\r\n            k = 1;\r\n        }\r\n        else if (b == 32) {\r\n            k = 5;\r\n        }\r\n        else if (b == 4) {\r\n            k = 2;\r\n        }\r\n        else {\r\n            return this.toRadix(b);\r\n        }\r\n        var km = (1 << k) - 1;\r\n        var d;\r\n        var m = false;\r\n        var r = \"\";\r\n        var i = this.t;\r\n        var p = this.DB - (i * this.DB) % k;\r\n        if (i-- > 0) {\r\n            if (p < this.DB && (d = this[i] >> p) > 0) {\r\n                m = true;\r\n                r = int2char(d);\r\n            }\r\n            while (i >= 0) {\r\n                if (p < k) {\r\n                    d = (this[i] & ((1 << p) - 1)) << (k - p);\r\n                    d |= this[--i] >> (p += this.DB - k);\r\n                }\r\n                else {\r\n                    d = (this[i] >> (p -= k)) & km;\r\n                    if (p <= 0) {\r\n                        p += this.DB;\r\n                        --i;\r\n                    }\r\n                }\r\n                if (d > 0) {\r\n                    m = true;\r\n                }\r\n                if (m) {\r\n                    r += int2char(d);\r\n                }\r\n            }\r\n        }\r\n        return m ? r : \"0\";\r\n    };\r\n    // BigInteger.prototype.negate = bnNegate;\r\n    // (public) -this\r\n    BigInteger.prototype.negate = function () {\r\n        var r = nbi();\r\n        BigInteger.ZERO.subTo(this, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.abs = bnAbs;\r\n    // (public) |this|\r\n    BigInteger.prototype.abs = function () {\r\n        return (this.s < 0) ? this.negate() : this;\r\n    };\r\n    // BigInteger.prototype.compareTo = bnCompareTo;\r\n    // (public) return + if this > a, - if this < a, 0 if equal\r\n    BigInteger.prototype.compareTo = function (a) {\r\n        var r = this.s - a.s;\r\n        if (r != 0) {\r\n            return r;\r\n        }\r\n        var i = this.t;\r\n        r = i - a.t;\r\n        if (r != 0) {\r\n            return (this.s < 0) ? -r : r;\r\n        }\r\n        while (--i >= 0) {\r\n            if ((r = this[i] - a[i]) != 0) {\r\n                return r;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    // BigInteger.prototype.bitLength = bnBitLength;\r\n    // (public) return the number of bits in \"this\"\r\n    BigInteger.prototype.bitLength = function () {\r\n        if (this.t <= 0) {\r\n            return 0;\r\n        }\r\n        return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\r\n    };\r\n    // BigInteger.prototype.mod = bnMod;\r\n    // (public) this mod a\r\n    BigInteger.prototype.mod = function (a) {\r\n        var r = nbi();\r\n        this.abs().divRemTo(a, null, r);\r\n        if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\r\n            a.subTo(r, r);\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.modPowInt = bnModPowInt;\r\n    // (public) this^e % m, 0 <= e < 2^32\r\n    BigInteger.prototype.modPowInt = function (e, m) {\r\n        var z;\r\n        if (e < 256 || m.isEven()) {\r\n            z = new Classic(m);\r\n        }\r\n        else {\r\n            z = new Montgomery(m);\r\n        }\r\n        return this.exp(e, z);\r\n    };\r\n    // BigInteger.prototype.clone = bnClone;\r\n    // (public)\r\n    BigInteger.prototype.clone = function () {\r\n        var r = nbi();\r\n        this.copyTo(r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.intValue = bnIntValue;\r\n    // (public) return value as integer\r\n    BigInteger.prototype.intValue = function () {\r\n        if (this.s < 0) {\r\n            if (this.t == 1) {\r\n                return this[0] - this.DV;\r\n            }\r\n            else if (this.t == 0) {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (this.t == 1) {\r\n            return this[0];\r\n        }\r\n        else if (this.t == 0) {\r\n            return 0;\r\n        }\r\n        // assumes 16 < DB < 32\r\n        return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\r\n    };\r\n    // BigInteger.prototype.byteValue = bnByteValue;\r\n    // (public) return value as byte\r\n    BigInteger.prototype.byteValue = function () {\r\n        return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\r\n    };\r\n    // BigInteger.prototype.shortValue = bnShortValue;\r\n    // (public) return value as short (assumes DB>=16)\r\n    BigInteger.prototype.shortValue = function () {\r\n        return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\r\n    };\r\n    // BigInteger.prototype.signum = bnSigNum;\r\n    // (public) 0 if this == 0, 1 if this > 0\r\n    BigInteger.prototype.signum = function () {\r\n        if (this.s < 0) {\r\n            return -1;\r\n        }\r\n        else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    // BigInteger.prototype.toByteArray = bnToByteArray;\r\n    // (public) convert to bigendian byte array\r\n    BigInteger.prototype.toByteArray = function () {\r\n        var i = this.t;\r\n        var r = [];\r\n        r[0] = this.s;\r\n        var p = this.DB - (i * this.DB) % 8;\r\n        var d;\r\n        var k = 0;\r\n        if (i-- > 0) {\r\n            if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {\r\n                r[k++] = d | (this.s << (this.DB - p));\r\n            }\r\n            while (i >= 0) {\r\n                if (p < 8) {\r\n                    d = (this[i] & ((1 << p) - 1)) << (8 - p);\r\n                    d |= this[--i] >> (p += this.DB - 8);\r\n                }\r\n                else {\r\n                    d = (this[i] >> (p -= 8)) & 0xff;\r\n                    if (p <= 0) {\r\n                        p += this.DB;\r\n                        --i;\r\n                    }\r\n                }\r\n                if ((d & 0x80) != 0) {\r\n                    d |= -256;\r\n                }\r\n                if (k == 0 && (this.s & 0x80) != (d & 0x80)) {\r\n                    ++k;\r\n                }\r\n                if (k > 0 || d != this.s) {\r\n                    r[k++] = d;\r\n                }\r\n            }\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.equals = bnEquals;\r\n    BigInteger.prototype.equals = function (a) {\r\n        return (this.compareTo(a) == 0);\r\n    };\r\n    // BigInteger.prototype.min = bnMin;\r\n    BigInteger.prototype.min = function (a) {\r\n        return (this.compareTo(a) < 0) ? this : a;\r\n    };\r\n    // BigInteger.prototype.max = bnMax;\r\n    BigInteger.prototype.max = function (a) {\r\n        return (this.compareTo(a) > 0) ? this : a;\r\n    };\r\n    // BigInteger.prototype.and = bnAnd;\r\n    BigInteger.prototype.and = function (a) {\r\n        var r = nbi();\r\n        this.bitwiseTo(a, op_and, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.or = bnOr;\r\n    BigInteger.prototype.or = function (a) {\r\n        var r = nbi();\r\n        this.bitwiseTo(a, op_or, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.xor = bnXor;\r\n    BigInteger.prototype.xor = function (a) {\r\n        var r = nbi();\r\n        this.bitwiseTo(a, op_xor, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.andNot = bnAndNot;\r\n    BigInteger.prototype.andNot = function (a) {\r\n        var r = nbi();\r\n        this.bitwiseTo(a, op_andnot, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.not = bnNot;\r\n    // (public) ~this\r\n    BigInteger.prototype.not = function () {\r\n        var r = nbi();\r\n        for (var i = 0; i < this.t; ++i) {\r\n            r[i] = this.DM & ~this[i];\r\n        }\r\n        r.t = this.t;\r\n        r.s = ~this.s;\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.shiftLeft = bnShiftLeft;\r\n    // (public) this << n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        var r = nbi();\r\n        if (n < 0) {\r\n            this.rShiftTo(-n, r);\r\n        }\r\n        else {\r\n            this.lShiftTo(n, r);\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.shiftRight = bnShiftRight;\r\n    // (public) this >> n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var r = nbi();\r\n        if (n < 0) {\r\n            this.lShiftTo(-n, r);\r\n        }\r\n        else {\r\n            this.rShiftTo(n, r);\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\r\n    // (public) returns index of lowest 1-bit (or -1 if none)\r\n    BigInteger.prototype.getLowestSetBit = function () {\r\n        for (var i = 0; i < this.t; ++i) {\r\n            if (this[i] != 0) {\r\n                return i * this.DB + lbit(this[i]);\r\n            }\r\n        }\r\n        if (this.s < 0) {\r\n            return this.t * this.DB;\r\n        }\r\n        return -1;\r\n    };\r\n    // BigInteger.prototype.bitCount = bnBitCount;\r\n    // (public) return number of set bits\r\n    BigInteger.prototype.bitCount = function () {\r\n        var r = 0;\r\n        var x = this.s & this.DM;\r\n        for (var i = 0; i < this.t; ++i) {\r\n            r += cbit(this[i] ^ x);\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.testBit = bnTestBit;\r\n    // (public) true iff nth bit is set\r\n    BigInteger.prototype.testBit = function (n) {\r\n        var j = Math.floor(n / this.DB);\r\n        if (j >= this.t) {\r\n            return (this.s != 0);\r\n        }\r\n        return ((this[j] & (1 << (n % this.DB))) != 0);\r\n    };\r\n    // BigInteger.prototype.setBit = bnSetBit;\r\n    // (public) this | (1<<n)\r\n    BigInteger.prototype.setBit = function (n) {\r\n        return this.changeBit(n, op_or);\r\n    };\r\n    // BigInteger.prototype.clearBit = bnClearBit;\r\n    // (public) this & ~(1<<n)\r\n    BigInteger.prototype.clearBit = function (n) {\r\n        return this.changeBit(n, op_andnot);\r\n    };\r\n    // BigInteger.prototype.flipBit = bnFlipBit;\r\n    // (public) this ^ (1<<n)\r\n    BigInteger.prototype.flipBit = function (n) {\r\n        return this.changeBit(n, op_xor);\r\n    };\r\n    // BigInteger.prototype.add = bnAdd;\r\n    // (public) this + a\r\n    BigInteger.prototype.add = function (a) {\r\n        var r = nbi();\r\n        this.addTo(a, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.subtract = bnSubtract;\r\n    // (public) this - a\r\n    BigInteger.prototype.subtract = function (a) {\r\n        var r = nbi();\r\n        this.subTo(a, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.multiply = bnMultiply;\r\n    // (public) this * a\r\n    BigInteger.prototype.multiply = function (a) {\r\n        var r = nbi();\r\n        this.multiplyTo(a, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.divide = bnDivide;\r\n    // (public) this / a\r\n    BigInteger.prototype.divide = function (a) {\r\n        var r = nbi();\r\n        this.divRemTo(a, r, null);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.remainder = bnRemainder;\r\n    // (public) this % a\r\n    BigInteger.prototype.remainder = function (a) {\r\n        var r = nbi();\r\n        this.divRemTo(a, null, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\r\n    // (public) [this/a,this%a]\r\n    BigInteger.prototype.divideAndRemainder = function (a) {\r\n        var q = nbi();\r\n        var r = nbi();\r\n        this.divRemTo(a, q, r);\r\n        return [q, r];\r\n    };\r\n    // BigInteger.prototype.modPow = bnModPow;\r\n    // (public) this^e % m (HAC 14.85)\r\n    BigInteger.prototype.modPow = function (e, m) {\r\n        var i = e.bitLength();\r\n        var k;\r\n        var r = nbv(1);\r\n        var z;\r\n        if (i <= 0) {\r\n            return r;\r\n        }\r\n        else if (i < 18) {\r\n            k = 1;\r\n        }\r\n        else if (i < 48) {\r\n            k = 3;\r\n        }\r\n        else if (i < 144) {\r\n            k = 4;\r\n        }\r\n        else if (i < 768) {\r\n            k = 5;\r\n        }\r\n        else {\r\n            k = 6;\r\n        }\r\n        if (i < 8) {\r\n            z = new Classic(m);\r\n        }\r\n        else if (m.isEven()) {\r\n            z = new Barrett(m);\r\n        }\r\n        else {\r\n            z = new Montgomery(m);\r\n        }\r\n        // precomputation\r\n        var g = [];\r\n        var n = 3;\r\n        var k1 = k - 1;\r\n        var km = (1 << k) - 1;\r\n        g[1] = z.convert(this);\r\n        if (k > 1) {\r\n            var g2 = nbi();\r\n            z.sqrTo(g[1], g2);\r\n            while (n <= km) {\r\n                g[n] = nbi();\r\n                z.mulTo(g2, g[n - 2], g[n]);\r\n                n += 2;\r\n            }\r\n        }\r\n        var j = e.t - 1;\r\n        var w;\r\n        var is1 = true;\r\n        var r2 = nbi();\r\n        var t;\r\n        i = nbits(e[j]) - 1;\r\n        while (j >= 0) {\r\n            if (i >= k1) {\r\n                w = (e[j] >> (i - k1)) & km;\r\n            }\r\n            else {\r\n                w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\r\n                if (j > 0) {\r\n                    w |= e[j - 1] >> (this.DB + i - k1);\r\n                }\r\n            }\r\n            n = k;\r\n            while ((w & 1) == 0) {\r\n                w >>= 1;\r\n                --n;\r\n            }\r\n            if ((i -= n) < 0) {\r\n                i += this.DB;\r\n                --j;\r\n            }\r\n            if (is1) { // ret == 1, don't bother squaring or multiplying it\r\n                g[w].copyTo(r);\r\n                is1 = false;\r\n            }\r\n            else {\r\n                while (n > 1) {\r\n                    z.sqrTo(r, r2);\r\n                    z.sqrTo(r2, r);\r\n                    n -= 2;\r\n                }\r\n                if (n > 0) {\r\n                    z.sqrTo(r, r2);\r\n                }\r\n                else {\r\n                    t = r;\r\n                    r = r2;\r\n                    r2 = t;\r\n                }\r\n                z.mulTo(r2, g[w], r);\r\n            }\r\n            while (j >= 0 && (e[j] & (1 << i)) == 0) {\r\n                z.sqrTo(r, r2);\r\n                t = r;\r\n                r = r2;\r\n                r2 = t;\r\n                if (--i < 0) {\r\n                    i = this.DB - 1;\r\n                    --j;\r\n                }\r\n            }\r\n        }\r\n        return z.revert(r);\r\n    };\r\n    // BigInteger.prototype.modInverse = bnModInverse;\r\n    // (public) 1/this % m (HAC 14.61)\r\n    BigInteger.prototype.modInverse = function (m) {\r\n        var ac = m.isEven();\r\n        if ((this.isEven() && ac) || m.signum() == 0) {\r\n            return BigInteger.ZERO;\r\n        }\r\n        var u = m.clone();\r\n        var v = this.clone();\r\n        var a = nbv(1);\r\n        var b = nbv(0);\r\n        var c = nbv(0);\r\n        var d = nbv(1);\r\n        while (u.signum() != 0) {\r\n            while (u.isEven()) {\r\n                u.rShiftTo(1, u);\r\n                if (ac) {\r\n                    if (!a.isEven() || !b.isEven()) {\r\n                        a.addTo(this, a);\r\n                        b.subTo(m, b);\r\n                    }\r\n                    a.rShiftTo(1, a);\r\n                }\r\n                else if (!b.isEven()) {\r\n                    b.subTo(m, b);\r\n                }\r\n                b.rShiftTo(1, b);\r\n            }\r\n            while (v.isEven()) {\r\n                v.rShiftTo(1, v);\r\n                if (ac) {\r\n                    if (!c.isEven() || !d.isEven()) {\r\n                        c.addTo(this, c);\r\n                        d.subTo(m, d);\r\n                    }\r\n                    c.rShiftTo(1, c);\r\n                }\r\n                else if (!d.isEven()) {\r\n                    d.subTo(m, d);\r\n                }\r\n                d.rShiftTo(1, d);\r\n            }\r\n            if (u.compareTo(v) >= 0) {\r\n                u.subTo(v, u);\r\n                if (ac) {\r\n                    a.subTo(c, a);\r\n                }\r\n                b.subTo(d, b);\r\n            }\r\n            else {\r\n                v.subTo(u, v);\r\n                if (ac) {\r\n                    c.subTo(a, c);\r\n                }\r\n                d.subTo(b, d);\r\n            }\r\n        }\r\n        if (v.compareTo(BigInteger.ONE) != 0) {\r\n            return BigInteger.ZERO;\r\n        }\r\n        if (d.compareTo(m) >= 0) {\r\n            return d.subtract(m);\r\n        }\r\n        if (d.signum() < 0) {\r\n            d.addTo(m, d);\r\n        }\r\n        else {\r\n            return d;\r\n        }\r\n        if (d.signum() < 0) {\r\n            return d.add(m);\r\n        }\r\n        else {\r\n            return d;\r\n        }\r\n    };\r\n    // BigInteger.prototype.pow = bnPow;\r\n    // (public) this^e\r\n    BigInteger.prototype.pow = function (e) {\r\n        return this.exp(e, new NullExp());\r\n    };\r\n    // BigInteger.prototype.gcd = bnGCD;\r\n    // (public) gcd(this,a) (HAC 14.54)\r\n    BigInteger.prototype.gcd = function (a) {\r\n        var x = (this.s < 0) ? this.negate() : this.clone();\r\n        var y = (a.s < 0) ? a.negate() : a.clone();\r\n        if (x.compareTo(y) < 0) {\r\n            var t = x;\r\n            x = y;\r\n            y = t;\r\n        }\r\n        var i = x.getLowestSetBit();\r\n        var g = y.getLowestSetBit();\r\n        if (g < 0) {\r\n            return x;\r\n        }\r\n        if (i < g) {\r\n            g = i;\r\n        }\r\n        if (g > 0) {\r\n            x.rShiftTo(g, x);\r\n            y.rShiftTo(g, y);\r\n        }\r\n        while (x.signum() > 0) {\r\n            if ((i = x.getLowestSetBit()) > 0) {\r\n                x.rShiftTo(i, x);\r\n            }\r\n            if ((i = y.getLowestSetBit()) > 0) {\r\n                y.rShiftTo(i, y);\r\n            }\r\n            if (x.compareTo(y) >= 0) {\r\n                x.subTo(y, x);\r\n                x.rShiftTo(1, x);\r\n            }\r\n            else {\r\n                y.subTo(x, y);\r\n                y.rShiftTo(1, y);\r\n            }\r\n        }\r\n        if (g > 0) {\r\n            y.lShiftTo(g, y);\r\n        }\r\n        return y;\r\n    };\r\n    // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\r\n    // (public) test primality with certainty >= 1-.5^t\r\n    BigInteger.prototype.isProbablePrime = function (t) {\r\n        var i;\r\n        var x = this.abs();\r\n        if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\r\n            for (i = 0; i < lowprimes.length; ++i) {\r\n                if (x[0] == lowprimes[i]) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        if (x.isEven()) {\r\n            return false;\r\n        }\r\n        i = 1;\r\n        while (i < lowprimes.length) {\r\n            var m = lowprimes[i];\r\n            var j = i + 1;\r\n            while (j < lowprimes.length && m < lplim) {\r\n                m *= lowprimes[j++];\r\n            }\r\n            m = x.modInt(m);\r\n            while (i < j) {\r\n                if (m % lowprimes[i++] == 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return x.millerRabin(t);\r\n    };\r\n    //#endregion PUBLIC\r\n    //#region PROTECTED\r\n    // BigInteger.prototype.copyTo = bnpCopyTo;\r\n    // (protected) copy this to r\r\n    BigInteger.prototype.copyTo = function (r) {\r\n        for (var i = this.t - 1; i >= 0; --i) {\r\n            r[i] = this[i];\r\n        }\r\n        r.t = this.t;\r\n        r.s = this.s;\r\n    };\r\n    // BigInteger.prototype.fromInt = bnpFromInt;\r\n    // (protected) set from integer value x, -DV <= x < DV\r\n    BigInteger.prototype.fromInt = function (x) {\r\n        this.t = 1;\r\n        this.s = (x < 0) ? -1 : 0;\r\n        if (x > 0) {\r\n            this[0] = x;\r\n        }\r\n        else if (x < -1) {\r\n            this[0] = x + this.DV;\r\n        }\r\n        else {\r\n            this.t = 0;\r\n        }\r\n    };\r\n    // BigInteger.prototype.fromString = bnpFromString;\r\n    // (protected) set from string and radix\r\n    BigInteger.prototype.fromString = function (s, b) {\r\n        var k;\r\n        if (b == 16) {\r\n            k = 4;\r\n        }\r\n        else if (b == 8) {\r\n            k = 3;\r\n        }\r\n        else if (b == 256) {\r\n            k = 8;\r\n            /* byte array */\r\n        }\r\n        else if (b == 2) {\r\n            k = 1;\r\n        }\r\n        else if (b == 32) {\r\n            k = 5;\r\n        }\r\n        else if (b == 4) {\r\n            k = 2;\r\n        }\r\n        else {\r\n            this.fromRadix(s, b);\r\n            return;\r\n        }\r\n        this.t = 0;\r\n        this.s = 0;\r\n        var i = s.length;\r\n        var mi = false;\r\n        var sh = 0;\r\n        while (--i >= 0) {\r\n            var x = (k == 8) ? (+s[i]) & 0xff : intAt(s, i);\r\n            if (x < 0) {\r\n                if (s.charAt(i) == \"-\") {\r\n                    mi = true;\r\n                }\r\n                continue;\r\n            }\r\n            mi = false;\r\n            if (sh == 0) {\r\n                this[this.t++] = x;\r\n            }\r\n            else if (sh + k > this.DB) {\r\n                this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\r\n                this[this.t++] = (x >> (this.DB - sh));\r\n            }\r\n            else {\r\n                this[this.t - 1] |= x << sh;\r\n            }\r\n            sh += k;\r\n            if (sh >= this.DB) {\r\n                sh -= this.DB;\r\n            }\r\n        }\r\n        if (k == 8 && ((+s[0]) & 0x80) != 0) {\r\n            this.s = -1;\r\n            if (sh > 0) {\r\n                this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\r\n            }\r\n        }\r\n        this.clamp();\r\n        if (mi) {\r\n            BigInteger.ZERO.subTo(this, this);\r\n        }\r\n    };\r\n    // BigInteger.prototype.clamp = bnpClamp;\r\n    // (protected) clamp off excess high words\r\n    BigInteger.prototype.clamp = function () {\r\n        var c = this.s & this.DM;\r\n        while (this.t > 0 && this[this.t - 1] == c) {\r\n            --this.t;\r\n        }\r\n    };\r\n    // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\r\n    // (protected) r = this << n*DB\r\n    BigInteger.prototype.dlShiftTo = function (n, r) {\r\n        var i;\r\n        for (i = this.t - 1; i >= 0; --i) {\r\n            r[i + n] = this[i];\r\n        }\r\n        for (i = n - 1; i >= 0; --i) {\r\n            r[i] = 0;\r\n        }\r\n        r.t = this.t + n;\r\n        r.s = this.s;\r\n    };\r\n    // BigInteger.prototype.drShiftTo = bnpDRShiftTo;\r\n    // (protected) r = this >> n*DB\r\n    BigInteger.prototype.drShiftTo = function (n, r) {\r\n        for (var i = n; i < this.t; ++i) {\r\n            r[i - n] = this[i];\r\n        }\r\n        r.t = Math.max(this.t - n, 0);\r\n        r.s = this.s;\r\n    };\r\n    // BigInteger.prototype.lShiftTo = bnpLShiftTo;\r\n    // (protected) r = this << n\r\n    BigInteger.prototype.lShiftTo = function (n, r) {\r\n        var bs = n % this.DB;\r\n        var cbs = this.DB - bs;\r\n        var bm = (1 << cbs) - 1;\r\n        var ds = Math.floor(n / this.DB);\r\n        var c = (this.s << bs) & this.DM;\r\n        for (var i = this.t - 1; i >= 0; --i) {\r\n            r[i + ds + 1] = (this[i] >> cbs) | c;\r\n            c = (this[i] & bm) << bs;\r\n        }\r\n        for (var i = ds - 1; i >= 0; --i) {\r\n            r[i] = 0;\r\n        }\r\n        r[ds] = c;\r\n        r.t = this.t + ds + 1;\r\n        r.s = this.s;\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.rShiftTo = bnpRShiftTo;\r\n    // (protected) r = this >> n\r\n    BigInteger.prototype.rShiftTo = function (n, r) {\r\n        r.s = this.s;\r\n        var ds = Math.floor(n / this.DB);\r\n        if (ds >= this.t) {\r\n            r.t = 0;\r\n            return;\r\n        }\r\n        var bs = n % this.DB;\r\n        var cbs = this.DB - bs;\r\n        var bm = (1 << bs) - 1;\r\n        r[0] = this[ds] >> bs;\r\n        for (var i = ds + 1; i < this.t; ++i) {\r\n            r[i - ds - 1] |= (this[i] & bm) << cbs;\r\n            r[i - ds] = this[i] >> bs;\r\n        }\r\n        if (bs > 0) {\r\n            r[this.t - ds - 1] |= (this.s & bm) << cbs;\r\n        }\r\n        r.t = this.t - ds;\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.subTo = bnpSubTo;\r\n    // (protected) r = this - a\r\n    BigInteger.prototype.subTo = function (a, r) {\r\n        var i = 0;\r\n        var c = 0;\r\n        var m = Math.min(a.t, this.t);\r\n        while (i < m) {\r\n            c += this[i] - a[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        if (a.t < this.t) {\r\n            c -= a.s;\r\n            while (i < this.t) {\r\n                c += this[i];\r\n                r[i++] = c & this.DM;\r\n                c >>= this.DB;\r\n            }\r\n            c += this.s;\r\n        }\r\n        else {\r\n            c += this.s;\r\n            while (i < a.t) {\r\n                c -= a[i];\r\n                r[i++] = c & this.DM;\r\n                c >>= this.DB;\r\n            }\r\n            c -= a.s;\r\n        }\r\n        r.s = (c < 0) ? -1 : 0;\r\n        if (c < -1) {\r\n            r[i++] = this.DV + c;\r\n        }\r\n        else if (c > 0) {\r\n            r[i++] = c;\r\n        }\r\n        r.t = i;\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.multiplyTo = bnpMultiplyTo;\r\n    // (protected) r = this * a, r != this,a (HAC 14.12)\r\n    // \"this\" should be the larger one if appropriate.\r\n    BigInteger.prototype.multiplyTo = function (a, r) {\r\n        var x = this.abs();\r\n        var y = a.abs();\r\n        var i = x.t;\r\n        r.t = i + y.t;\r\n        while (--i >= 0) {\r\n            r[i] = 0;\r\n        }\r\n        for (i = 0; i < y.t; ++i) {\r\n            r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\r\n        }\r\n        r.s = 0;\r\n        r.clamp();\r\n        if (this.s != a.s) {\r\n            BigInteger.ZERO.subTo(r, r);\r\n        }\r\n    };\r\n    // BigInteger.prototype.squareTo = bnpSquareTo;\r\n    // (protected) r = this^2, r != this (HAC 14.16)\r\n    BigInteger.prototype.squareTo = function (r) {\r\n        var x = this.abs();\r\n        var i = r.t = 2 * x.t;\r\n        while (--i >= 0) {\r\n            r[i] = 0;\r\n        }\r\n        for (i = 0; i < x.t - 1; ++i) {\r\n            var c = x.am(i, x[i], r, 2 * i, 0, 1);\r\n            if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\r\n                r[i + x.t] -= x.DV;\r\n                r[i + x.t + 1] = 1;\r\n            }\r\n        }\r\n        if (r.t > 0) {\r\n            r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\r\n        }\r\n        r.s = 0;\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.divRemTo = bnpDivRemTo;\r\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\r\n    // r != q, this != m.  q or r may be null.\r\n    BigInteger.prototype.divRemTo = function (m, q, r) {\r\n        var pm = m.abs();\r\n        if (pm.t <= 0) {\r\n            return;\r\n        }\r\n        var pt = this.abs();\r\n        if (pt.t < pm.t) {\r\n            if (q != null) {\r\n                q.fromInt(0);\r\n            }\r\n            if (r != null) {\r\n                this.copyTo(r);\r\n            }\r\n            return;\r\n        }\r\n        if (r == null) {\r\n            r = nbi();\r\n        }\r\n        var y = nbi();\r\n        var ts = this.s;\r\n        var ms = m.s;\r\n        var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\r\n        if (nsh > 0) {\r\n            pm.lShiftTo(nsh, y);\r\n            pt.lShiftTo(nsh, r);\r\n        }\r\n        else {\r\n            pm.copyTo(y);\r\n            pt.copyTo(r);\r\n        }\r\n        var ys = y.t;\r\n        var y0 = y[ys - 1];\r\n        if (y0 == 0) {\r\n            return;\r\n        }\r\n        var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\r\n        var d1 = this.FV / yt;\r\n        var d2 = (1 << this.F1) / yt;\r\n        var e = 1 << this.F2;\r\n        var i = r.t;\r\n        var j = i - ys;\r\n        var t = (q == null) ? nbi() : q;\r\n        y.dlShiftTo(j, t);\r\n        if (r.compareTo(t) >= 0) {\r\n            r[r.t++] = 1;\r\n            r.subTo(t, r);\r\n        }\r\n        BigInteger.ONE.dlShiftTo(ys, t);\r\n        t.subTo(y, y); // \"negative\" y so we can replace sub with am later\r\n        while (y.t < ys) {\r\n            y[y.t++] = 0;\r\n        }\r\n        while (--j >= 0) {\r\n            // Estimate quotient digit\r\n            var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\r\n            if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\r\n                y.dlShiftTo(j, t);\r\n                r.subTo(t, r);\r\n                while (r[i] < --qd) {\r\n                    r.subTo(t, r);\r\n                }\r\n            }\r\n        }\r\n        if (q != null) {\r\n            r.drShiftTo(ys, q);\r\n            if (ts != ms) {\r\n                BigInteger.ZERO.subTo(q, q);\r\n            }\r\n        }\r\n        r.t = ys;\r\n        r.clamp();\r\n        if (nsh > 0) {\r\n            r.rShiftTo(nsh, r);\r\n        } // Denormalize remainder\r\n        if (ts < 0) {\r\n            BigInteger.ZERO.subTo(r, r);\r\n        }\r\n    };\r\n    // BigInteger.prototype.invDigit = bnpInvDigit;\r\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\r\n    // justification:\r\n    //         xy == 1 (mod m)\r\n    //         xy =  1+km\r\n    //   xy(2-xy) = (1+km)(1-km)\r\n    // x[y(2-xy)] = 1-k^2m^2\r\n    // x[y(2-xy)] == 1 (mod m^2)\r\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\r\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\r\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\r\n    BigInteger.prototype.invDigit = function () {\r\n        if (this.t < 1) {\r\n            return 0;\r\n        }\r\n        var x = this[0];\r\n        if ((x & 1) == 0) {\r\n            return 0;\r\n        }\r\n        var y = x & 3; // y == 1/x mod 2^2\r\n        y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\r\n        y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\r\n        y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\r\n        // last step - calculate inverse mod DV directly;\r\n        // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\r\n        y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\r\n        // we really want the negative inverse, and -DV < y < DV\r\n        return (y > 0) ? this.DV - y : -y;\r\n    };\r\n    // BigInteger.prototype.isEven = bnpIsEven;\r\n    // (protected) true iff this is even\r\n    BigInteger.prototype.isEven = function () {\r\n        return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\r\n    };\r\n    // BigInteger.prototype.exp = bnpExp;\r\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\r\n    BigInteger.prototype.exp = function (e, z) {\r\n        if (e > 0xffffffff || e < 1) {\r\n            return BigInteger.ONE;\r\n        }\r\n        var r = nbi();\r\n        var r2 = nbi();\r\n        var g = z.convert(this);\r\n        var i = nbits(e) - 1;\r\n        g.copyTo(r);\r\n        while (--i >= 0) {\r\n            z.sqrTo(r, r2);\r\n            if ((e & (1 << i)) > 0) {\r\n                z.mulTo(r2, g, r);\r\n            }\r\n            else {\r\n                var t = r;\r\n                r = r2;\r\n                r2 = t;\r\n            }\r\n        }\r\n        return z.revert(r);\r\n    };\r\n    // BigInteger.prototype.chunkSize = bnpChunkSize;\r\n    // (protected) return x s.t. r^x < DV\r\n    BigInteger.prototype.chunkSize = function (r) {\r\n        return Math.floor(Math.LN2 * this.DB / Math.log(r));\r\n    };\r\n    // BigInteger.prototype.toRadix = bnpToRadix;\r\n    // (protected) convert to radix string\r\n    BigInteger.prototype.toRadix = function (b) {\r\n        if (b == null) {\r\n            b = 10;\r\n        }\r\n        if (this.signum() == 0 || b < 2 || b > 36) {\r\n            return \"0\";\r\n        }\r\n        var cs = this.chunkSize(b);\r\n        var a = Math.pow(b, cs);\r\n        var d = nbv(a);\r\n        var y = nbi();\r\n        var z = nbi();\r\n        var r = \"\";\r\n        this.divRemTo(d, y, z);\r\n        while (y.signum() > 0) {\r\n            r = (a + z.intValue()).toString(b).substr(1) + r;\r\n            y.divRemTo(d, y, z);\r\n        }\r\n        return z.intValue().toString(b) + r;\r\n    };\r\n    // BigInteger.prototype.fromRadix = bnpFromRadix;\r\n    // (protected) convert from radix string\r\n    BigInteger.prototype.fromRadix = function (s, b) {\r\n        this.fromInt(0);\r\n        if (b == null) {\r\n            b = 10;\r\n        }\r\n        var cs = this.chunkSize(b);\r\n        var d = Math.pow(b, cs);\r\n        var mi = false;\r\n        var j = 0;\r\n        var w = 0;\r\n        for (var i = 0; i < s.length; ++i) {\r\n            var x = intAt(s, i);\r\n            if (x < 0) {\r\n                if (s.charAt(i) == \"-\" && this.signum() == 0) {\r\n                    mi = true;\r\n                }\r\n                continue;\r\n            }\r\n            w = b * w + x;\r\n            if (++j >= cs) {\r\n                this.dMultiply(d);\r\n                this.dAddOffset(w, 0);\r\n                j = 0;\r\n                w = 0;\r\n            }\r\n        }\r\n        if (j > 0) {\r\n            this.dMultiply(Math.pow(b, j));\r\n            this.dAddOffset(w, 0);\r\n        }\r\n        if (mi) {\r\n            BigInteger.ZERO.subTo(this, this);\r\n        }\r\n    };\r\n    // BigInteger.prototype.fromNumber = bnpFromNumber;\r\n    // (protected) alternate constructor\r\n    BigInteger.prototype.fromNumber = function (a, b, c) {\r\n        if (\"number\" == typeof b) {\r\n            // new BigInteger(int,int,RNG)\r\n            if (a < 2) {\r\n                this.fromInt(1);\r\n            }\r\n            else {\r\n                this.fromNumber(a, c);\r\n                if (!this.testBit(a - 1)) {\r\n                    // force MSB set\r\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\r\n                }\r\n                if (this.isEven()) {\r\n                    this.dAddOffset(1, 0);\r\n                } // force odd\r\n                while (!this.isProbablePrime(b)) {\r\n                    this.dAddOffset(2, 0);\r\n                    if (this.bitLength() > a) {\r\n                        this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // new BigInteger(int,RNG)\r\n            var x = [];\r\n            var t = a & 7;\r\n            x.length = (a >> 3) + 1;\r\n            b.nextBytes(x);\r\n            if (t > 0) {\r\n                x[0] &= ((1 << t) - 1);\r\n            }\r\n            else {\r\n                x[0] = 0;\r\n            }\r\n            this.fromString(x, 256);\r\n        }\r\n    };\r\n    // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\r\n    // (protected) r = this op a (bitwise)\r\n    BigInteger.prototype.bitwiseTo = function (a, op, r) {\r\n        var i;\r\n        var f;\r\n        var m = Math.min(a.t, this.t);\r\n        for (i = 0; i < m; ++i) {\r\n            r[i] = op(this[i], a[i]);\r\n        }\r\n        if (a.t < this.t) {\r\n            f = a.s & this.DM;\r\n            for (i = m; i < this.t; ++i) {\r\n                r[i] = op(this[i], f);\r\n            }\r\n            r.t = this.t;\r\n        }\r\n        else {\r\n            f = this.s & this.DM;\r\n            for (i = m; i < a.t; ++i) {\r\n                r[i] = op(f, a[i]);\r\n            }\r\n            r.t = a.t;\r\n        }\r\n        r.s = op(this.s, a.s);\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.changeBit = bnpChangeBit;\r\n    // (protected) this op (1<<n)\r\n    BigInteger.prototype.changeBit = function (n, op) {\r\n        var r = BigInteger.ONE.shiftLeft(n);\r\n        this.bitwiseTo(r, op, r);\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.addTo = bnpAddTo;\r\n    // (protected) r = this + a\r\n    BigInteger.prototype.addTo = function (a, r) {\r\n        var i = 0;\r\n        var c = 0;\r\n        var m = Math.min(a.t, this.t);\r\n        while (i < m) {\r\n            c += this[i] + a[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        if (a.t < this.t) {\r\n            c += a.s;\r\n            while (i < this.t) {\r\n                c += this[i];\r\n                r[i++] = c & this.DM;\r\n                c >>= this.DB;\r\n            }\r\n            c += this.s;\r\n        }\r\n        else {\r\n            c += this.s;\r\n            while (i < a.t) {\r\n                c += a[i];\r\n                r[i++] = c & this.DM;\r\n                c >>= this.DB;\r\n            }\r\n            c += a.s;\r\n        }\r\n        r.s = (c < 0) ? -1 : 0;\r\n        if (c > 0) {\r\n            r[i++] = c;\r\n        }\r\n        else if (c < -1) {\r\n            r[i++] = this.DV + c;\r\n        }\r\n        r.t = i;\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.dMultiply = bnpDMultiply;\r\n    // (protected) this *= n, this >= 0, 1 < n < DV\r\n    BigInteger.prototype.dMultiply = function (n) {\r\n        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\r\n        ++this.t;\r\n        this.clamp();\r\n    };\r\n    // BigInteger.prototype.dAddOffset = bnpDAddOffset;\r\n    // (protected) this += n << w words, this >= 0\r\n    BigInteger.prototype.dAddOffset = function (n, w) {\r\n        if (n == 0) {\r\n            return;\r\n        }\r\n        while (this.t <= w) {\r\n            this[this.t++] = 0;\r\n        }\r\n        this[w] += n;\r\n        while (this[w] >= this.DV) {\r\n            this[w] -= this.DV;\r\n            if (++w >= this.t) {\r\n                this[this.t++] = 0;\r\n            }\r\n            ++this[w];\r\n        }\r\n    };\r\n    // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\r\n    // (protected) r = lower n words of \"this * a\", a.t <= n\r\n    // \"this\" should be the larger one if appropriate.\r\n    BigInteger.prototype.multiplyLowerTo = function (a, n, r) {\r\n        var i = Math.min(this.t + a.t, n);\r\n        r.s = 0; // assumes a,this >= 0\r\n        r.t = i;\r\n        while (i > 0) {\r\n            r[--i] = 0;\r\n        }\r\n        for (var j = r.t - this.t; i < j; ++i) {\r\n            r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\r\n        }\r\n        for (var j = Math.min(a.t, n); i < j; ++i) {\r\n            this.am(0, a[i], r, i, 0, n - i);\r\n        }\r\n        r.clamp();\r\n    };\r\n    // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\r\n    // (protected) r = \"this * a\" without lower n words, n > 0\r\n    // \"this\" should be the larger one if appropriate.\r\n    BigInteger.prototype.multiplyUpperTo = function (a, n, r) {\r\n        --n;\r\n        var i = r.t = this.t + a.t - n;\r\n        r.s = 0; // assumes a,this >= 0\r\n        while (--i >= 0) {\r\n            r[i] = 0;\r\n        }\r\n        for (i = Math.max(n - this.t, 0); i < a.t; ++i) {\r\n            r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\r\n        }\r\n        r.clamp();\r\n        r.drShiftTo(1, r);\r\n    };\r\n    // BigInteger.prototype.modInt = bnpModInt;\r\n    // (protected) this % n, n < 2^26\r\n    BigInteger.prototype.modInt = function (n) {\r\n        if (n <= 0) {\r\n            return 0;\r\n        }\r\n        var d = this.DV % n;\r\n        var r = (this.s < 0) ? n - 1 : 0;\r\n        if (this.t > 0) {\r\n            if (d == 0) {\r\n                r = this[0] % n;\r\n            }\r\n            else {\r\n                for (var i = this.t - 1; i >= 0; --i) {\r\n                    r = (d * r + this[i]) % n;\r\n                }\r\n            }\r\n        }\r\n        return r;\r\n    };\r\n    // BigInteger.prototype.millerRabin = bnpMillerRabin;\r\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\r\n    BigInteger.prototype.millerRabin = function (t) {\r\n        var n1 = this.subtract(BigInteger.ONE);\r\n        var k = n1.getLowestSetBit();\r\n        if (k <= 0) {\r\n            return false;\r\n        }\r\n        var r = n1.shiftRight(k);\r\n        t = (t + 1) >> 1;\r\n        if (t > lowprimes.length) {\r\n            t = lowprimes.length;\r\n        }\r\n        var a = nbi();\r\n        for (var i = 0; i < t; ++i) {\r\n            // Pick bases at random, instead of starting at 2\r\n            a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\r\n            var y = a.modPow(r, this);\r\n            if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\r\n                var j = 1;\r\n                while (j++ < k && y.compareTo(n1) != 0) {\r\n                    y = y.modPowInt(2, this);\r\n                    if (y.compareTo(BigInteger.ONE) == 0) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (y.compareTo(n1) != 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    // BigInteger.prototype.square = bnSquare;\r\n    // (public) this^2\r\n    BigInteger.prototype.square = function () {\r\n        var r = nbi();\r\n        this.squareTo(r);\r\n        return r;\r\n    };\r\n    //#region ASYNC\r\n    // Public API method\r\n    BigInteger.prototype.gcda = function (a, callback) {\r\n        var x = (this.s < 0) ? this.negate() : this.clone();\r\n        var y = (a.s < 0) ? a.negate() : a.clone();\r\n        if (x.compareTo(y) < 0) {\r\n            var t = x;\r\n            x = y;\r\n            y = t;\r\n        }\r\n        var i = x.getLowestSetBit();\r\n        var g = y.getLowestSetBit();\r\n        if (g < 0) {\r\n            callback(x);\r\n            return;\r\n        }\r\n        if (i < g) {\r\n            g = i;\r\n        }\r\n        if (g > 0) {\r\n            x.rShiftTo(g, x);\r\n            y.rShiftTo(g, y);\r\n        }\r\n        // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.\r\n        var gcda1 = function () {\r\n            if ((i = x.getLowestSetBit()) > 0) {\r\n                x.rShiftTo(i, x);\r\n            }\r\n            if ((i = y.getLowestSetBit()) > 0) {\r\n                y.rShiftTo(i, y);\r\n            }\r\n            if (x.compareTo(y) >= 0) {\r\n                x.subTo(y, x);\r\n                x.rShiftTo(1, x);\r\n            }\r\n            else {\r\n                y.subTo(x, y);\r\n                y.rShiftTo(1, y);\r\n            }\r\n            if (!(x.signum() > 0)) {\r\n                if (g > 0) {\r\n                    y.lShiftTo(g, y);\r\n                }\r\n                setTimeout(function () { callback(y); }, 0); // escape\r\n            }\r\n            else {\r\n                setTimeout(gcda1, 0);\r\n            }\r\n        };\r\n        setTimeout(gcda1, 10);\r\n    };\r\n    // (protected) alternate constructor\r\n    BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {\r\n        if (\"number\" == typeof b) {\r\n            if (a < 2) {\r\n                this.fromInt(1);\r\n            }\r\n            else {\r\n                this.fromNumber(a, c);\r\n                if (!this.testBit(a - 1)) {\r\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\r\n                }\r\n                if (this.isEven()) {\r\n                    this.dAddOffset(1, 0);\r\n                }\r\n                var bnp_1 = this;\r\n                var bnpfn1_1 = function () {\r\n                    bnp_1.dAddOffset(2, 0);\r\n                    if (bnp_1.bitLength() > a) {\r\n                        bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);\r\n                    }\r\n                    if (bnp_1.isProbablePrime(b)) {\r\n                        setTimeout(function () { callback(); }, 0); // escape\r\n                    }\r\n                    else {\r\n                        setTimeout(bnpfn1_1, 0);\r\n                    }\r\n                };\r\n                setTimeout(bnpfn1_1, 0);\r\n            }\r\n        }\r\n        else {\r\n            var x = [];\r\n            var t = a & 7;\r\n            x.length = (a >> 3) + 1;\r\n            b.nextBytes(x);\r\n            if (t > 0) {\r\n                x[0] &= ((1 << t) - 1);\r\n            }\r\n            else {\r\n                x[0] = 0;\r\n            }\r\n            this.fromString(x, 256);\r\n        }\r\n    };\r\n    return BigInteger;\r\n}());\r\nexport { BigInteger };\r\n//#region REDUCERS\r\n//#region NullExp\r\nvar NullExp = /** @class */ (function () {\r\n    function NullExp() {\r\n    }\r\n    // NullExp.prototype.convert = nNop;\r\n    NullExp.prototype.convert = function (x) {\r\n        return x;\r\n    };\r\n    // NullExp.prototype.revert = nNop;\r\n    NullExp.prototype.revert = function (x) {\r\n        return x;\r\n    };\r\n    // NullExp.prototype.mulTo = nMulTo;\r\n    NullExp.prototype.mulTo = function (x, y, r) {\r\n        x.multiplyTo(y, r);\r\n    };\r\n    // NullExp.prototype.sqrTo = nSqrTo;\r\n    NullExp.prototype.sqrTo = function (x, r) {\r\n        x.squareTo(r);\r\n    };\r\n    return NullExp;\r\n}());\r\n// Modular reduction using \"classic\" algorithm\r\nvar Classic = /** @class */ (function () {\r\n    function Classic(m) {\r\n        this.m = m;\r\n    }\r\n    // Classic.prototype.convert = cConvert;\r\n    Classic.prototype.convert = function (x) {\r\n        if (x.s < 0 || x.compareTo(this.m) >= 0) {\r\n            return x.mod(this.m);\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    };\r\n    // Classic.prototype.revert = cRevert;\r\n    Classic.prototype.revert = function (x) {\r\n        return x;\r\n    };\r\n    // Classic.prototype.reduce = cReduce;\r\n    Classic.prototype.reduce = function (x) {\r\n        x.divRemTo(this.m, null, x);\r\n    };\r\n    // Classic.prototype.mulTo = cMulTo;\r\n    Classic.prototype.mulTo = function (x, y, r) {\r\n        x.multiplyTo(y, r);\r\n        this.reduce(r);\r\n    };\r\n    // Classic.prototype.sqrTo = cSqrTo;\r\n    Classic.prototype.sqrTo = function (x, r) {\r\n        x.squareTo(r);\r\n        this.reduce(r);\r\n    };\r\n    return Classic;\r\n}());\r\n//#endregion\r\n//#region Montgomery\r\n// Montgomery reduction\r\nvar Montgomery = /** @class */ (function () {\r\n    function Montgomery(m) {\r\n        this.m = m;\r\n        this.mp = m.invDigit();\r\n        this.mpl = this.mp & 0x7fff;\r\n        this.mph = this.mp >> 15;\r\n        this.um = (1 << (m.DB - 15)) - 1;\r\n        this.mt2 = 2 * m.t;\r\n    }\r\n    // Montgomery.prototype.convert = montConvert;\r\n    // xR mod m\r\n    Montgomery.prototype.convert = function (x) {\r\n        var r = nbi();\r\n        x.abs().dlShiftTo(this.m.t, r);\r\n        r.divRemTo(this.m, null, r);\r\n        if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\r\n            this.m.subTo(r, r);\r\n        }\r\n        return r;\r\n    };\r\n    // Montgomery.prototype.revert = montRevert;\r\n    // x/R mod m\r\n    Montgomery.prototype.revert = function (x) {\r\n        var r = nbi();\r\n        x.copyTo(r);\r\n        this.reduce(r);\r\n        return r;\r\n    };\r\n    // Montgomery.prototype.reduce = montReduce;\r\n    // x = x/R mod m (HAC 14.32)\r\n    Montgomery.prototype.reduce = function (x) {\r\n        while (x.t <= this.mt2) {\r\n            // pad x so am has enough room later\r\n            x[x.t++] = 0;\r\n        }\r\n        for (var i = 0; i < this.m.t; ++i) {\r\n            // faster way of calculating u0 = x[i]*mp mod DV\r\n            var j = x[i] & 0x7fff;\r\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\r\n            // use am to combine the multiply-shift-add into one call\r\n            j = i + this.m.t;\r\n            x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\r\n            // propagate carry\r\n            while (x[j] >= x.DV) {\r\n                x[j] -= x.DV;\r\n                x[++j]++;\r\n            }\r\n        }\r\n        x.clamp();\r\n        x.drShiftTo(this.m.t, x);\r\n        if (x.compareTo(this.m) >= 0) {\r\n            x.subTo(this.m, x);\r\n        }\r\n    };\r\n    // Montgomery.prototype.mulTo = montMulTo;\r\n    // r = \"xy/R mod m\"; x,y != r\r\n    Montgomery.prototype.mulTo = function (x, y, r) {\r\n        x.multiplyTo(y, r);\r\n        this.reduce(r);\r\n    };\r\n    // Montgomery.prototype.sqrTo = montSqrTo;\r\n    // r = \"x^2/R mod m\"; x != r\r\n    Montgomery.prototype.sqrTo = function (x, r) {\r\n        x.squareTo(r);\r\n        this.reduce(r);\r\n    };\r\n    return Montgomery;\r\n}());\r\n//#endregion Montgomery\r\n//#region Barrett\r\n// Barrett modular reduction\r\nvar Barrett = /** @class */ (function () {\r\n    function Barrett(m) {\r\n        this.m = m;\r\n        // setup Barrett\r\n        this.r2 = nbi();\r\n        this.q3 = nbi();\r\n        BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\r\n        this.mu = this.r2.divide(m);\r\n    }\r\n    // Barrett.prototype.convert = barrettConvert;\r\n    Barrett.prototype.convert = function (x) {\r\n        if (x.s < 0 || x.t > 2 * this.m.t) {\r\n            return x.mod(this.m);\r\n        }\r\n        else if (x.compareTo(this.m) < 0) {\r\n            return x;\r\n        }\r\n        else {\r\n            var r = nbi();\r\n            x.copyTo(r);\r\n            this.reduce(r);\r\n            return r;\r\n        }\r\n    };\r\n    // Barrett.prototype.revert = barrettRevert;\r\n    Barrett.prototype.revert = function (x) {\r\n        return x;\r\n    };\r\n    // Barrett.prototype.reduce = barrettReduce;\r\n    // x = x mod m (HAC 14.42)\r\n    Barrett.prototype.reduce = function (x) {\r\n        x.drShiftTo(this.m.t - 1, this.r2);\r\n        if (x.t > this.m.t + 1) {\r\n            x.t = this.m.t + 1;\r\n            x.clamp();\r\n        }\r\n        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\r\n        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\r\n        while (x.compareTo(this.r2) < 0) {\r\n            x.dAddOffset(1, this.m.t + 1);\r\n        }\r\n        x.subTo(this.r2, x);\r\n        while (x.compareTo(this.m) >= 0) {\r\n            x.subTo(this.m, x);\r\n        }\r\n    };\r\n    // Barrett.prototype.mulTo = barrettMulTo;\r\n    // r = x*y mod m; x,y != r\r\n    Barrett.prototype.mulTo = function (x, y, r) {\r\n        x.multiplyTo(y, r);\r\n        this.reduce(r);\r\n    };\r\n    // Barrett.prototype.sqrTo = barrettSqrTo;\r\n    // r = x^2 mod m; x != r\r\n    Barrett.prototype.sqrTo = function (x, r) {\r\n        x.squareTo(r);\r\n        this.reduce(r);\r\n    };\r\n    return Barrett;\r\n}());\r\n//#endregion\r\n//#endregion REDUCERS\r\n// return new, unset BigInteger\r\nexport function nbi() { return new BigInteger(null); }\r\nexport function parseBigInt(str, r) {\r\n    return new BigInteger(str, r);\r\n}\r\n// am: Compute w_j += (x*this_i), propagate carries,\r\n// c is initial carry, returns final carry.\r\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\r\n// We need to select the fastest one that works in this environment.\r\nvar inBrowser = typeof navigator !== \"undefined\";\r\nif (inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\r\n    // am2 avoids a big mult-and-extract completely.\r\n    // Max digit bits should be <= 30 because we do bitwise ops\r\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\r\n    BigInteger.prototype.am = function am2(i, x, w, j, c, n) {\r\n        var xl = x & 0x7fff;\r\n        var xh = x >> 15;\r\n        while (--n >= 0) {\r\n            var l = this[i] & 0x7fff;\r\n            var h = this[i++] >> 15;\r\n            var m = xh * l + h * xl;\r\n            l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\r\n            c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\r\n            w[j++] = l & 0x3fffffff;\r\n        }\r\n        return c;\r\n    };\r\n    dbits = 30;\r\n}\r\nelse if (inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\r\n    // am1: use a single mult and divide to get the high bits,\r\n    // max digit bits should be 26 because\r\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\r\n    BigInteger.prototype.am = function am1(i, x, w, j, c, n) {\r\n        while (--n >= 0) {\r\n            var v = x * this[i++] + w[j] + c;\r\n            c = Math.floor(v / 0x4000000);\r\n            w[j++] = v & 0x3ffffff;\r\n        }\r\n        return c;\r\n    };\r\n    dbits = 26;\r\n}\r\nelse { // Mozilla/Netscape seems to prefer am3\r\n    // Alternately, set max digit bits to 28 since some\r\n    // browsers slow down when dealing with 32-bit numbers.\r\n    BigInteger.prototype.am = function am3(i, x, w, j, c, n) {\r\n        var xl = x & 0x3fff;\r\n        var xh = x >> 14;\r\n        while (--n >= 0) {\r\n            var l = this[i] & 0x3fff;\r\n            var h = this[i++] >> 14;\r\n            var m = xh * l + h * xl;\r\n            l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\r\n            c = (l >> 28) + (m >> 14) + xh * h;\r\n            w[j++] = l & 0xfffffff;\r\n        }\r\n        return c;\r\n    };\r\n    dbits = 28;\r\n}\r\nBigInteger.prototype.DB = dbits;\r\nBigInteger.prototype.DM = ((1 << dbits) - 1);\r\nBigInteger.prototype.DV = (1 << dbits);\r\nvar BI_FP = 52;\r\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\r\nBigInteger.prototype.F1 = BI_FP - dbits;\r\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\r\n// Digit conversions\r\nvar BI_RC = [];\r\nvar rr;\r\nvar vv;\r\nrr = \"0\".charCodeAt(0);\r\nfor (vv = 0; vv <= 9; ++vv) {\r\n    BI_RC[rr++] = vv;\r\n}\r\nrr = \"a\".charCodeAt(0);\r\nfor (vv = 10; vv < 36; ++vv) {\r\n    BI_RC[rr++] = vv;\r\n}\r\nrr = \"A\".charCodeAt(0);\r\nfor (vv = 10; vv < 36; ++vv) {\r\n    BI_RC[rr++] = vv;\r\n}\r\nexport function intAt(s, i) {\r\n    var c = BI_RC[s.charCodeAt(i)];\r\n    return (c == null) ? -1 : c;\r\n}\r\n// return bigint initialized to value\r\nexport function nbv(i) {\r\n    var r = nbi();\r\n    r.fromInt(i);\r\n    return r;\r\n}\r\n// returns bit length of the integer x\r\nexport function nbits(x) {\r\n    var r = 1;\r\n    var t;\r\n    if ((t = x >>> 16) != 0) {\r\n        x = t;\r\n        r += 16;\r\n    }\r\n    if ((t = x >> 8) != 0) {\r\n        x = t;\r\n        r += 8;\r\n    }\r\n    if ((t = x >> 4) != 0) {\r\n        x = t;\r\n        r += 4;\r\n    }\r\n    if ((t = x >> 2) != 0) {\r\n        x = t;\r\n        r += 2;\r\n    }\r\n    if ((t = x >> 1) != 0) {\r\n        x = t;\r\n        r += 1;\r\n    }\r\n    return r;\r\n}\r\n// \"constants\"\r\nBigInteger.ZERO = nbv(0);\r\nBigInteger.ONE = nbv(1);\r\n", "// prng4.js - uses Arcfour as a PRNG\r\nvar Arcfour = /** @class */ (function () {\r\n    function Arcfour() {\r\n        this.i = 0;\r\n        this.j = 0;\r\n        this.S = [];\r\n    }\r\n    // Arcfour.prototype.init = ARC4init;\r\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\r\n    Arcfour.prototype.init = function (key) {\r\n        var i;\r\n        var j;\r\n        var t;\r\n        for (i = 0; i < 256; ++i) {\r\n            this.S[i] = i;\r\n        }\r\n        j = 0;\r\n        for (i = 0; i < 256; ++i) {\r\n            j = (j + this.S[i] + key[i % key.length]) & 255;\r\n            t = this.S[i];\r\n            this.S[i] = this.S[j];\r\n            this.S[j] = t;\r\n        }\r\n        this.i = 0;\r\n        this.j = 0;\r\n    };\r\n    // Arcfour.prototype.next = ARC4next;\r\n    Arcfour.prototype.next = function () {\r\n        var t;\r\n        this.i = (this.i + 1) & 255;\r\n        this.j = (this.j + this.S[this.i]) & 255;\r\n        t = this.S[this.i];\r\n        this.S[this.i] = this.S[this.j];\r\n        this.S[this.j] = t;\r\n        return this.S[(t + this.S[this.i]) & 255];\r\n    };\r\n    return Arcfour;\r\n}());\r\nexport { Arcfour };\r\n// Plug in your RNG constructor here\r\nexport function prng_newstate() {\r\n    return new Arcfour();\r\n}\r\n// Pool size must be a multiple of 4 and greater than 32.\r\n// An array of bytes the size of the pool will be passed to init()\r\nexport var rng_psize = 256;\r\n", "// Random number generator - requires a PRNG backend, e.g. prng4.js\r\nimport { prng_newstate, rng_psize } from \"./prng4\";\r\nvar rng_state;\r\nvar rng_pool = null;\r\nvar rng_pptr;\r\n// Initialize the pool with junk if needed.\r\nif (rng_pool == null) {\r\n    rng_pool = [];\r\n    rng_pptr = 0;\r\n    var t = void 0;\r\n    if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\r\n        // Extract entropy (2048 bits) from RNG if available\r\n        var z = new Uint32Array(256);\r\n        window.crypto.getRandomValues(z);\r\n        for (t = 0; t < z.length; ++t) {\r\n            rng_pool[rng_pptr++] = z[t] & 255;\r\n        }\r\n    }\r\n    // Use mouse events for entropy, if we do not have enough entropy by the time\r\n    // we need it, entropy will be generated by Math.random.\r\n    var count = 0;\r\n    var onMouseMoveListener_1 = function (ev) {\r\n        count = count || 0;\r\n        if (count >= 256 || rng_pptr >= rng_psize) {\r\n            if (window.removeEventListener) {\r\n                window.removeEventListener(\"mousemove\", onMouseMoveListener_1, false);\r\n            }\r\n            else if (window.detachEvent) {\r\n                window.detachEvent(\"onmousemove\", onMouseMoveListener_1);\r\n            }\r\n            return;\r\n        }\r\n        try {\r\n            var mouseCoordinates = ev.x + ev.y;\r\n            rng_pool[rng_pptr++] = mouseCoordinates & 255;\r\n            count += 1;\r\n        }\r\n        catch (e) {\r\n            // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.\r\n        }\r\n    };\r\n    if (typeof window !== 'undefined') {\r\n        if (window.addEventListener) {\r\n            window.addEventListener(\"mousemove\", onMouseMoveListener_1, false);\r\n        }\r\n        else if (window.attachEvent) {\r\n            window.attachEvent(\"onmousemove\", onMouseMoveListener_1);\r\n        }\r\n    }\r\n}\r\nfunction rng_get_byte() {\r\n    if (rng_state == null) {\r\n        rng_state = prng_newstate();\r\n        // At this point, we may not have collected enough entropy.  If not, fall back to Math.random\r\n        while (rng_pptr < rng_psize) {\r\n            var random = Math.floor(65536 * Math.random());\r\n            rng_pool[rng_pptr++] = random & 255;\r\n        }\r\n        rng_state.init(rng_pool);\r\n        for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {\r\n            rng_pool[rng_pptr] = 0;\r\n        }\r\n        rng_pptr = 0;\r\n    }\r\n    // TODO: allow reseeding after first request\r\n    return rng_state.next();\r\n}\r\nvar SecureRandom = /** @class */ (function () {\r\n    function SecureRandom() {\r\n    }\r\n    SecureRandom.prototype.nextBytes = function (ba) {\r\n        for (var i = 0; i < ba.length; ++i) {\r\n            ba[i] = rng_get_byte();\r\n        }\r\n    };\r\n    return SecureRandom;\r\n}());\r\nexport { SecureRandom };\r\n", "// Depends on jsbn.js and rng.js\r\n// Version 1.1: support utf-8 encoding in pkcs1pad2\r\n// convert a (hex) string to a bignum object\r\nimport { BigInteger, nbi, parseBigInt } from \"./jsbn\";\r\nimport { SecureRandom } from \"./rng\";\r\n// function linebrk(s,n) {\r\n//   var ret = \"\";\r\n//   var i = 0;\r\n//   while(i + n < s.length) {\r\n//     ret += s.substring(i,i+n) + \"\\n\";\r\n//     i += n;\r\n//   }\r\n//   return ret + s.substring(i,s.length);\r\n// }\r\n// function byte2Hex(b) {\r\n//   if(b < 0x10)\r\n//     return \"0\" + b.toString(16);\r\n//   else\r\n//     return b.toString(16);\r\n// }\r\nfunction pkcs1pad1(s, n) {\r\n    if (n < s.length + 22) {\r\n        console.error(\"Message too long for RSA\");\r\n        return null;\r\n    }\r\n    var len = n - s.length - 6;\r\n    var filler = \"\";\r\n    for (var f = 0; f < len; f += 2) {\r\n        filler += \"ff\";\r\n    }\r\n    var m = \"0001\" + filler + \"00\" + s;\r\n    return parseBigInt(m, 16);\r\n}\r\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\r\nfunction pkcs1pad2(s, n) {\r\n    if (n < s.length + 11) { // TODO: fix for utf-8\r\n        console.error(\"Message too long for RSA\");\r\n        return null;\r\n    }\r\n    var ba = [];\r\n    var i = s.length - 1;\r\n    while (i >= 0 && n > 0) {\r\n        var c = s.charCodeAt(i--);\r\n        if (c < 128) { // encode using utf-8\r\n            ba[--n] = c;\r\n        }\r\n        else if ((c > 127) && (c < 2048)) {\r\n            ba[--n] = (c & 63) | 128;\r\n            ba[--n] = (c >> 6) | 192;\r\n        }\r\n        else {\r\n            ba[--n] = (c & 63) | 128;\r\n            ba[--n] = ((c >> 6) & 63) | 128;\r\n            ba[--n] = (c >> 12) | 224;\r\n        }\r\n    }\r\n    ba[--n] = 0;\r\n    var rng = new SecureRandom();\r\n    var x = [];\r\n    while (n > 2) { // random non-zero pad\r\n        x[0] = 0;\r\n        while (x[0] == 0) {\r\n            rng.nextBytes(x);\r\n        }\r\n        ba[--n] = x[0];\r\n    }\r\n    ba[--n] = 2;\r\n    ba[--n] = 0;\r\n    return new BigInteger(ba);\r\n}\r\n// \"empty\" RSA key constructor\r\nvar RSAKey = /** @class */ (function () {\r\n    function RSAKey() {\r\n        this.n = null;\r\n        this.e = 0;\r\n        this.d = null;\r\n        this.p = null;\r\n        this.q = null;\r\n        this.dmp1 = null;\r\n        this.dmq1 = null;\r\n        this.coeff = null;\r\n    }\r\n    //#region PROTECTED\r\n    // protected\r\n    // RSAKey.prototype.doPublic = RSADoPublic;\r\n    // Perform raw public operation on \"x\": return x^e (mod n)\r\n    RSAKey.prototype.doPublic = function (x) {\r\n        return x.modPowInt(this.e, this.n);\r\n    };\r\n    // RSAKey.prototype.doPrivate = RSADoPrivate;\r\n    // Perform raw private operation on \"x\": return x^d (mod n)\r\n    RSAKey.prototype.doPrivate = function (x) {\r\n        if (this.p == null || this.q == null) {\r\n            return x.modPow(this.d, this.n);\r\n        }\r\n        // TODO: re-calculate any missing CRT params\r\n        var xp = x.mod(this.p).modPow(this.dmp1, this.p);\r\n        var xq = x.mod(this.q).modPow(this.dmq1, this.q);\r\n        while (xp.compareTo(xq) < 0) {\r\n            xp = xp.add(this.p);\r\n        }\r\n        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\r\n    };\r\n    //#endregion PROTECTED\r\n    //#region PUBLIC\r\n    // RSAKey.prototype.setPublic = RSASetPublic;\r\n    // Set the public key fields N and e from hex strings\r\n    RSAKey.prototype.setPublic = function (N, E) {\r\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\r\n            this.n = parseBigInt(N, 16);\r\n            this.e = parseInt(E, 16);\r\n        }\r\n        else {\r\n            console.error(\"Invalid RSA public key\");\r\n        }\r\n    };\r\n    // RSAKey.prototype.encrypt = RSAEncrypt;\r\n    // Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\r\n    RSAKey.prototype.encrypt = function (text) {\r\n        var maxLength = (this.n.bitLength() + 7) >> 3;\r\n        var m = pkcs1pad2(text, maxLength);\r\n        if (m == null) {\r\n            return null;\r\n        }\r\n        var c = this.doPublic(m);\r\n        if (c == null) {\r\n            return null;\r\n        }\r\n        var h = c.toString(16);\r\n        var length = h.length;\r\n        // fix zero before result\r\n        for (var i = 0; i < maxLength * 2 - length; i++) {\r\n            h = \"0\" + h;\r\n        }\r\n        return h;\r\n    };\r\n    // RSAKey.prototype.setPrivate = RSASetPrivate;\r\n    // Set the private key fields N, e, and d from hex strings\r\n    RSAKey.prototype.setPrivate = function (N, E, D) {\r\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\r\n            this.n = parseBigInt(N, 16);\r\n            this.e = parseInt(E, 16);\r\n            this.d = parseBigInt(D, 16);\r\n        }\r\n        else {\r\n            console.error(\"Invalid RSA private key\");\r\n        }\r\n    };\r\n    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;\r\n    // Set the private key fields N, e, d and CRT params from hex strings\r\n    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {\r\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\r\n            this.n = parseBigInt(N, 16);\r\n            this.e = parseInt(E, 16);\r\n            this.d = parseBigInt(D, 16);\r\n            this.p = parseBigInt(P, 16);\r\n            this.q = parseBigInt(Q, 16);\r\n            this.dmp1 = parseBigInt(DP, 16);\r\n            this.dmq1 = parseBigInt(DQ, 16);\r\n            this.coeff = parseBigInt(C, 16);\r\n        }\r\n        else {\r\n            console.error(\"Invalid RSA private key\");\r\n        }\r\n    };\r\n    // RSAKey.prototype.generate = RSAGenerate;\r\n    // Generate a new random private key B bits long, using public expt E\r\n    RSAKey.prototype.generate = function (B, E) {\r\n        var rng = new SecureRandom();\r\n        var qs = B >> 1;\r\n        this.e = parseInt(E, 16);\r\n        var ee = new BigInteger(E, 16);\r\n        for (;;) {\r\n            for (;;) {\r\n                this.p = new BigInteger(B - qs, 1, rng);\r\n                if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {\r\n                    break;\r\n                }\r\n            }\r\n            for (;;) {\r\n                this.q = new BigInteger(qs, 1, rng);\r\n                if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.p.compareTo(this.q) <= 0) {\r\n                var t = this.p;\r\n                this.p = this.q;\r\n                this.q = t;\r\n            }\r\n            var p1 = this.p.subtract(BigInteger.ONE);\r\n            var q1 = this.q.subtract(BigInteger.ONE);\r\n            var phi = p1.multiply(q1);\r\n            if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\r\n                this.n = this.p.multiply(this.q);\r\n                this.d = ee.modInverse(phi);\r\n                this.dmp1 = this.d.mod(p1);\r\n                this.dmq1 = this.d.mod(q1);\r\n                this.coeff = this.q.modInverse(this.p);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    // RSAKey.prototype.decrypt = RSADecrypt;\r\n    // Return the PKCS#1 RSA decryption of \"ctext\".\r\n    // \"ctext\" is an even-length hex string and the output is a plain string.\r\n    RSAKey.prototype.decrypt = function (ctext) {\r\n        var c = parseBigInt(ctext, 16);\r\n        var m = this.doPrivate(c);\r\n        if (m == null) {\r\n            return null;\r\n        }\r\n        return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);\r\n    };\r\n    // Generate a new random private key B bits long, using public expt E\r\n    RSAKey.prototype.generateAsync = function (B, E, callback) {\r\n        var rng = new SecureRandom();\r\n        var qs = B >> 1;\r\n        this.e = parseInt(E, 16);\r\n        var ee = new BigInteger(E, 16);\r\n        var rsa = this;\r\n        // These functions have non-descript names because they were originally for(;;) loops.\r\n        // I don't know about cryptography to give them better names than loop1-4.\r\n        var loop1 = function () {\r\n            var loop4 = function () {\r\n                if (rsa.p.compareTo(rsa.q) <= 0) {\r\n                    var t = rsa.p;\r\n                    rsa.p = rsa.q;\r\n                    rsa.q = t;\r\n                }\r\n                var p1 = rsa.p.subtract(BigInteger.ONE);\r\n                var q1 = rsa.q.subtract(BigInteger.ONE);\r\n                var phi = p1.multiply(q1);\r\n                if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\r\n                    rsa.n = rsa.p.multiply(rsa.q);\r\n                    rsa.d = ee.modInverse(phi);\r\n                    rsa.dmp1 = rsa.d.mod(p1);\r\n                    rsa.dmq1 = rsa.d.mod(q1);\r\n                    rsa.coeff = rsa.q.modInverse(rsa.p);\r\n                    setTimeout(function () { callback(); }, 0); // escape\r\n                }\r\n                else {\r\n                    setTimeout(loop1, 0);\r\n                }\r\n            };\r\n            var loop3 = function () {\r\n                rsa.q = nbi();\r\n                rsa.q.fromNumberAsync(qs, 1, rng, function () {\r\n                    rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {\r\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {\r\n                            setTimeout(loop4, 0);\r\n                        }\r\n                        else {\r\n                            setTimeout(loop3, 0);\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            var loop2 = function () {\r\n                rsa.p = nbi();\r\n                rsa.p.fromNumberAsync(B - qs, 1, rng, function () {\r\n                    rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {\r\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {\r\n                            setTimeout(loop3, 0);\r\n                        }\r\n                        else {\r\n                            setTimeout(loop2, 0);\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            setTimeout(loop2, 0);\r\n        };\r\n        setTimeout(loop1, 0);\r\n    };\r\n    RSAKey.prototype.sign = function (text, digestMethod, digestName) {\r\n        var header = getDigestHeader(digestName);\r\n        var digest = header + digestMethod(text).toString();\r\n        var m = pkcs1pad1(digest, this.n.bitLength() / 4);\r\n        if (m == null) {\r\n            return null;\r\n        }\r\n        var c = this.doPrivate(m);\r\n        if (c == null) {\r\n            return null;\r\n        }\r\n        var h = c.toString(16);\r\n        if ((h.length & 1) == 0) {\r\n            return h;\r\n        }\r\n        else {\r\n            return \"0\" + h;\r\n        }\r\n    };\r\n    RSAKey.prototype.verify = function (text, signature, digestMethod) {\r\n        var c = parseBigInt(signature, 16);\r\n        var m = this.doPublic(c);\r\n        if (m == null) {\r\n            return null;\r\n        }\r\n        var unpadded = m.toString(16).replace(/^1f+00/, \"\");\r\n        var digest = removeDigestHeader(unpadded);\r\n        return digest == digestMethod(text).toString();\r\n    };\r\n    return RSAKey;\r\n}());\r\nexport { RSAKey };\r\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\r\nfunction pkcs1unpad2(d, n) {\r\n    var b = d.toByteArray();\r\n    var i = 0;\r\n    while (i < b.length && b[i] == 0) {\r\n        ++i;\r\n    }\r\n    if (b.length - i != n - 1 || b[i] != 2) {\r\n        return null;\r\n    }\r\n    ++i;\r\n    while (b[i] != 0) {\r\n        if (++i >= b.length) {\r\n            return null;\r\n        }\r\n    }\r\n    var ret = \"\";\r\n    while (++i < b.length) {\r\n        var c = b[i] & 255;\r\n        if (c < 128) { // utf-8 decode\r\n            ret += String.fromCharCode(c);\r\n        }\r\n        else if ((c > 191) && (c < 224)) {\r\n            ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));\r\n            ++i;\r\n        }\r\n        else {\r\n            ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));\r\n            i += 2;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n// https://tools.ietf.org/html/rfc3447#page-43\r\nvar DIGEST_HEADERS = {\r\n    md2: \"3020300c06082a864886f70d020205000410\",\r\n    md5: \"3020300c06082a864886f70d020505000410\",\r\n    sha1: \"3021300906052b0e03021a05000414\",\r\n    sha224: \"302d300d06096086480165030402040500041c\",\r\n    sha256: \"3031300d060960864801650304020105000420\",\r\n    sha384: \"3041300d060960864801650304020205000430\",\r\n    sha512: \"3051300d060960864801650304020305000440\",\r\n    ripemd160: \"3021300906052b2403020105000414\"\r\n};\r\nfunction getDigestHeader(name) {\r\n    return DIGEST_HEADERS[name] || \"\";\r\n}\r\nfunction removeDigestHeader(str) {\r\n    for (var name_1 in DIGEST_HEADERS) {\r\n        if (DIGEST_HEADERS.hasOwnProperty(name_1)) {\r\n            var header = DIGEST_HEADERS[name_1];\r\n            var len = header.length;\r\n            if (str.substr(0, len) == header) {\r\n                return str.substr(len);\r\n            }\r\n        }\r\n    }\r\n    return str;\r\n}\r\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\r\n// function RSAEncryptB64(text) {\r\n//  var h = this.encrypt(text);\r\n//  if(h) return hex2b64(h); else return null;\r\n// }\r\n// public\r\n// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;\r\n", "/*!\r\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\r\nCode licensed under the BSD License:\r\nhttp://developer.yahoo.com/yui/license.html\r\nversion: 2.9.0\r\n*/\r\nexport var YAHOO = {};\r\nYAHOO.lang = {\r\n    /**\r\n     * Utility to set up the prototype, constructor and superclass properties to\r\n     * support an inheritance strategy that can chain constructors and methods.\r\n     * Static members will not be inherited.\r\n     *\r\n     * @method extend\r\n     * @static\r\n     * @param {Function} subc   the object to modify\r\n     * @param {Function} superc the object to inherit\r\n     * @param {Object} overrides  additional properties/methods to add to the\r\n     *                              subclass prototype.  These will override the\r\n     *                              matching items obtained from the superclass\r\n     *                              if present.\r\n     */\r\n    extend: function (subc, superc, overrides) {\r\n        if (!superc || !subc) {\r\n            throw new Error(\"YAHOO.lang.extend failed, please check that \" +\r\n                \"all dependencies are included.\");\r\n        }\r\n        var F = function () { };\r\n        F.prototype = superc.prototype;\r\n        subc.prototype = new F();\r\n        subc.prototype.constructor = subc;\r\n        subc.superclass = superc.prototype;\r\n        if (superc.prototype.constructor == Object.prototype.constructor) {\r\n            superc.prototype.constructor = superc;\r\n        }\r\n        if (overrides) {\r\n            var i;\r\n            for (i in overrides) {\r\n                subc.prototype[i] = overrides[i];\r\n            }\r\n            /*\r\n             * IE will not enumerate native functions in a derived object even if the\r\n             * function was overridden.  This is a workaround for specific functions\r\n             * we care about on the Object prototype.\r\n             * @property _IEEnumFix\r\n             * @param {Function} r  the object to receive the augmentation\r\n             * @param {Function} s  the object that supplies the properties to augment\r\n             * @static\r\n             * @private\r\n             */\r\n            var _IEEnumFix = function () { }, ADD = [\"toString\", \"valueOf\"];\r\n            try {\r\n                if (/MSIE/.test(navigator.userAgent)) {\r\n                    _IEEnumFix = function (r, s) {\r\n                        for (i = 0; i < ADD.length; i = i + 1) {\r\n                            var fname = ADD[i], f = s[fname];\r\n                            if (typeof f === 'function' && f != Object.prototype[fname]) {\r\n                                r[fname] = f;\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            catch (ex) { }\r\n            ;\r\n            _IEEnumFix(subc.prototype, overrides);\r\n        }\r\n    }\r\n};\r\n", "/* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\n/*\r\n * asn1.js - ASN.1 DER encoder classes\r\n *\r\n * Copyright (c) 2013-2017 Kenji Urushima (kenji.urushima@gmail.com)\r\n *\r\n * This software is licensed under the terms of the MIT License.\r\n * https://kjur.github.io/jsrsasign/license\r\n *\r\n * The above copyright and license notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n */\r\nimport { BigInteger } from \"../jsbn/jsbn\";\r\nimport { YAHOO } from \"./yahoo\";\r\n/**\r\n * @fileOverview\r\n * @name asn1-1.0.js\r\n * @author Kenji Urushima kenji.urushima@gmail.com\r\n * @version asn1 1.0.13 (2017-Jun-02)\r\n * @since jsrsasign 2.1\r\n * @license <a href=\"https://kjur.github.io/jsrsasign/license/\">MIT License</a>\r\n */\r\n/**\r\n * kjur's class library name space\r\n * <p>\r\n * This name space provides following name spaces:\r\n * <ul>\r\n * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>\r\n * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>\r\n * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature\r\n * class and utilities</li>\r\n * </ul>\r\n * </p>\r\n * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.\r\n * @name KJUR\r\n * @namespace kjur's class library name space\r\n */\r\nexport var KJUR = {};\r\n/**\r\n * kjur's ASN.1 class library name space\r\n * <p>\r\n * This is ITU-T X.690 ASN.1 DER encoder class library and\r\n * class structure and methods is very similar to\r\n * org.bouncycastle.asn1 package of\r\n * well known BouncyCaslte Cryptography Library.\r\n * <h4>PROVIDING ASN.1 PRIMITIVES</h4>\r\n * Here are ASN.1 DER primitive classes.\r\n * <ul>\r\n * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>\r\n * <li>0x02 {@link KJUR.asn1.DERInteger}</li>\r\n * <li>0x03 {@link KJUR.asn1.DERBitString}</li>\r\n * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>\r\n * <li>0x05 {@link KJUR.asn1.DERNull}</li>\r\n * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>\r\n * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>\r\n * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>\r\n * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>\r\n * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>\r\n * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>\r\n * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>\r\n * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>\r\n * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>\r\n * <li>0x30 {@link KJUR.asn1.DERSequence}</li>\r\n * <li>0x31 {@link KJUR.asn1.DERSet}</li>\r\n * </ul>\r\n * <h4>OTHER ASN.1 CLASSES</h4>\r\n * <ul>\r\n * <li>{@link KJUR.asn1.ASN1Object}</li>\r\n * <li>{@link KJUR.asn1.DERAbstractString}</li>\r\n * <li>{@link KJUR.asn1.DERAbstractTime}</li>\r\n * <li>{@link KJUR.asn1.DERAbstractStructured}</li>\r\n * <li>{@link KJUR.asn1.DERTaggedObject}</li>\r\n * </ul>\r\n * <h4>SUB NAME SPACES</h4>\r\n * <ul>\r\n * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>\r\n * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>\r\n * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>\r\n * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>\r\n * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>\r\n * </ul>\r\n * </p>\r\n * NOTE: Please ignore method summary and document of this namespace.\r\n * This caused by a bug of jsdoc2.\r\n * @name KJUR.asn1\r\n * @namespace\r\n */\r\nif (typeof KJUR.asn1 == \"undefined\" || !KJUR.asn1)\r\n    KJUR.asn1 = {};\r\n/**\r\n * ASN1 utilities class\r\n * @name KJUR.asn1.ASN1Util\r\n * @class ASN1 utilities class\r\n * @since asn1 1.0.2\r\n */\r\nKJUR.asn1.ASN1Util = new function () {\r\n    this.integerToByteHex = function (i) {\r\n        var h = i.toString(16);\r\n        if ((h.length % 2) == 1)\r\n            h = '0' + h;\r\n        return h;\r\n    };\r\n    this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {\r\n        var h = bigIntegerValue.toString(16);\r\n        if (h.substr(0, 1) != '-') {\r\n            if (h.length % 2 == 1) {\r\n                h = '0' + h;\r\n            }\r\n            else {\r\n                if (!h.match(/^[0-7]/)) {\r\n                    h = '00' + h;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var hPos = h.substr(1);\r\n            var xorLen = hPos.length;\r\n            if (xorLen % 2 == 1) {\r\n                xorLen += 1;\r\n            }\r\n            else {\r\n                if (!h.match(/^[0-7]/)) {\r\n                    xorLen += 2;\r\n                }\r\n            }\r\n            var hMask = '';\r\n            for (var i = 0; i < xorLen; i++) {\r\n                hMask += 'f';\r\n            }\r\n            var biMask = new BigInteger(hMask, 16);\r\n            var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);\r\n            h = biNeg.toString(16).replace(/^-/, '');\r\n        }\r\n        return h;\r\n    };\r\n    /**\r\n     * get PEM string from hexadecimal data and header string\r\n     * @name getPEMStringFromHex\r\n     * @memberOf KJUR.asn1.ASN1Util\r\n     * @function\r\n     * @param {String} dataHex hexadecimal string of PEM body\r\n     * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')\r\n     * @return {String} PEM formatted string of input data\r\n     * @description\r\n     * This method converts a hexadecimal string to a PEM string with\r\n     * a specified header. Its line break will be CRLF(\"\\r\\n\").\r\n     * @example\r\n     * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');\r\n     * // value of pem will be:\r\n     * -----BEGIN PRIVATE KEY-----\r\n     * YWFh\r\n     * -----END PRIVATE KEY-----\r\n     */\r\n    this.getPEMStringFromHex = function (dataHex, pemHeader) {\r\n        return hextopem(dataHex, pemHeader);\r\n    };\r\n    /**\r\n     * generate ASN1Object specifed by JSON parameters\r\n     * @name newObject\r\n     * @memberOf KJUR.asn1.ASN1Util\r\n     * @function\r\n     * @param {Array} param JSON parameter to generate ASN1Object\r\n     * @return {KJUR.asn1.ASN1Object} generated object\r\n     * @since asn1 1.0.3\r\n     * @description\r\n     * generate any ASN1Object specified by JSON param\r\n     * including ASN.1 primitive or structured.\r\n     * Generally 'param' can be described as follows:\r\n     * <blockquote>\r\n     * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}\r\n     * </blockquote>\r\n     * 'TYPE-OF-ASN1OBJ' can be one of following symbols:\r\n     * <ul>\r\n     * <li>'bool' - DERBoolean</li>\r\n     * <li>'int' - DERInteger</li>\r\n     * <li>'bitstr' - DERBitString</li>\r\n     * <li>'octstr' - DEROctetString</li>\r\n     * <li>'null' - DERNull</li>\r\n     * <li>'oid' - DERObjectIdentifier</li>\r\n     * <li>'enum' - DEREnumerated</li>\r\n     * <li>'utf8str' - DERUTF8String</li>\r\n     * <li>'numstr' - DERNumericString</li>\r\n     * <li>'prnstr' - DERPrintableString</li>\r\n     * <li>'telstr' - DERTeletexString</li>\r\n     * <li>'ia5str' - DERIA5String</li>\r\n     * <li>'utctime' - DERUTCTime</li>\r\n     * <li>'gentime' - DERGeneralizedTime</li>\r\n     * <li>'seq' - DERSequence</li>\r\n     * <li>'set' - DERSet</li>\r\n     * <li>'tag' - DERTaggedObject</li>\r\n     * </ul>\r\n     * @example\r\n     * newObject({'prnstr': 'aaa'});\r\n     * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})\r\n     * // ASN.1 Tagged Object\r\n     * newObject({'tag': {'tag': 'a1',\r\n     *                    'explicit': true,\r\n     *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});\r\n     * // more simple representation of ASN.1 Tagged Object\r\n     * newObject({'tag': ['a1',\r\n     *                    true,\r\n     *                    {'seq': [\r\n     *                      {'int': 3},\r\n     *                      {'prnstr': 'aaa'}]}\r\n     *                   ]});\r\n     */\r\n    this.newObject = function (param) {\r\n        var _KJUR = KJUR, _KJUR_asn1 = _KJUR.asn1, _DERBoolean = _KJUR_asn1.DERBoolean, _DERInteger = _KJUR_asn1.DERInteger, _DERBitString = _KJUR_asn1.DERBitString, _DEROctetString = _KJUR_asn1.DEROctetString, _DERNull = _KJUR_asn1.DERNull, _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier, _DEREnumerated = _KJUR_asn1.DEREnumerated, _DERUTF8String = _KJUR_asn1.DERUTF8String, _DERNumericString = _KJUR_asn1.DERNumericString, _DERPrintableString = _KJUR_asn1.DERPrintableString, _DERTeletexString = _KJUR_asn1.DERTeletexString, _DERIA5String = _KJUR_asn1.DERIA5String, _DERUTCTime = _KJUR_asn1.DERUTCTime, _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime, _DERSequence = _KJUR_asn1.DERSequence, _DERSet = _KJUR_asn1.DERSet, _DERTaggedObject = _KJUR_asn1.DERTaggedObject, _newObject = _KJUR_asn1.ASN1Util.newObject;\r\n        var keys = Object.keys(param);\r\n        if (keys.length != 1)\r\n            throw \"key of param shall be only one.\";\r\n        var key = keys[0];\r\n        if (\":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:\".indexOf(\":\" + key + \":\") == -1)\r\n            throw \"undefined key: \" + key;\r\n        if (key == \"bool\")\r\n            return new _DERBoolean(param[key]);\r\n        if (key == \"int\")\r\n            return new _DERInteger(param[key]);\r\n        if (key == \"bitstr\")\r\n            return new _DERBitString(param[key]);\r\n        if (key == \"octstr\")\r\n            return new _DEROctetString(param[key]);\r\n        if (key == \"null\")\r\n            return new _DERNull(param[key]);\r\n        if (key == \"oid\")\r\n            return new _DERObjectIdentifier(param[key]);\r\n        if (key == \"enum\")\r\n            return new _DEREnumerated(param[key]);\r\n        if (key == \"utf8str\")\r\n            return new _DERUTF8String(param[key]);\r\n        if (key == \"numstr\")\r\n            return new _DERNumericString(param[key]);\r\n        if (key == \"prnstr\")\r\n            return new _DERPrintableString(param[key]);\r\n        if (key == \"telstr\")\r\n            return new _DERTeletexString(param[key]);\r\n        if (key == \"ia5str\")\r\n            return new _DERIA5String(param[key]);\r\n        if (key == \"utctime\")\r\n            return new _DERUTCTime(param[key]);\r\n        if (key == \"gentime\")\r\n            return new _DERGeneralizedTime(param[key]);\r\n        if (key == \"seq\") {\r\n            var paramList = param[key];\r\n            var a = [];\r\n            for (var i = 0; i < paramList.length; i++) {\r\n                var asn1Obj = _newObject(paramList[i]);\r\n                a.push(asn1Obj);\r\n            }\r\n            return new _DERSequence({ 'array': a });\r\n        }\r\n        if (key == \"set\") {\r\n            var paramList = param[key];\r\n            var a = [];\r\n            for (var i = 0; i < paramList.length; i++) {\r\n                var asn1Obj = _newObject(paramList[i]);\r\n                a.push(asn1Obj);\r\n            }\r\n            return new _DERSet({ 'array': a });\r\n        }\r\n        if (key == \"tag\") {\r\n            var tagParam = param[key];\r\n            if (Object.prototype.toString.call(tagParam) === '[object Array]' &&\r\n                tagParam.length == 3) {\r\n                var obj = _newObject(tagParam[2]);\r\n                return new _DERTaggedObject({ tag: tagParam[0],\r\n                    explicit: tagParam[1],\r\n                    obj: obj });\r\n            }\r\n            else {\r\n                var newParam = {};\r\n                if (tagParam.explicit !== undefined)\r\n                    newParam.explicit = tagParam.explicit;\r\n                if (tagParam.tag !== undefined)\r\n                    newParam.tag = tagParam.tag;\r\n                if (tagParam.obj === undefined)\r\n                    throw \"obj shall be specified for 'tag'.\";\r\n                newParam.obj = _newObject(tagParam.obj);\r\n                return new _DERTaggedObject(newParam);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * get encoded hexadecimal string of ASN1Object specifed by JSON parameters\r\n     * @name jsonToASN1HEX\r\n     * @memberOf KJUR.asn1.ASN1Util\r\n     * @function\r\n     * @param {Array} param JSON parameter to generate ASN1Object\r\n     * @return hexadecimal string of ASN1Object\r\n     * @since asn1 1.0.4\r\n     * @description\r\n     * As for ASN.1 object representation of JSON object,\r\n     * please see {@link newObject}.\r\n     * @example\r\n     * jsonToASN1HEX({'prnstr': 'aaa'});\r\n     */\r\n    this.jsonToASN1HEX = function (param) {\r\n        var asn1Obj = this.newObject(param);\r\n        return asn1Obj.getEncodedHex();\r\n    };\r\n};\r\n/**\r\n * get dot noted oid number string from hexadecimal value of OID\r\n * @name oidHexToInt\r\n * @memberOf KJUR.asn1.ASN1Util\r\n * @function\r\n * @param {String} hex hexadecimal value of object identifier\r\n * @return {String} dot noted string of object identifier\r\n * @since jsrsasign 4.8.3 asn1 1.0.7\r\n * @description\r\n * This static method converts from hexadecimal string representation of\r\n * ASN.1 value of object identifier to oid number string.\r\n * @example\r\n * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; \"2.5.4.6\"\r\n */\r\nKJUR.asn1.ASN1Util.oidHexToInt = function (hex) {\r\n    var s = \"\";\r\n    var i01 = parseInt(hex.substr(0, 2), 16);\r\n    var i0 = Math.floor(i01 / 40);\r\n    var i1 = i01 % 40;\r\n    var s = i0 + \".\" + i1;\r\n    var binbuf = \"\";\r\n    for (var i = 2; i < hex.length; i += 2) {\r\n        var value = parseInt(hex.substr(i, 2), 16);\r\n        var bin = (\"00000000\" + value.toString(2)).slice(-8);\r\n        binbuf = binbuf + bin.substr(1, 7);\r\n        if (bin.substr(0, 1) == \"0\") {\r\n            var bi = new BigInteger(binbuf, 2);\r\n            s = s + \".\" + bi.toString(10);\r\n            binbuf = \"\";\r\n        }\r\n    }\r\n    ;\r\n    return s;\r\n};\r\n/**\r\n * get hexadecimal value of object identifier from dot noted oid value\r\n * @name oidIntToHex\r\n * @memberOf KJUR.asn1.ASN1Util\r\n * @function\r\n * @param {String} oidString dot noted string of object identifier\r\n * @return {String} hexadecimal value of object identifier\r\n * @since jsrsasign 4.8.3 asn1 1.0.7\r\n * @description\r\n * This static method converts from object identifier value string.\r\n * to hexadecimal string representation of it.\r\n * @example\r\n * KJUR.asn1.ASN1Util.oidIntToHex(\"2.5.4.6\") &rarr; \"550406\"\r\n */\r\nKJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {\r\n    var itox = function (i) {\r\n        var h = i.toString(16);\r\n        if (h.length == 1)\r\n            h = '0' + h;\r\n        return h;\r\n    };\r\n    var roidtox = function (roid) {\r\n        var h = '';\r\n        var bi = new BigInteger(roid, 10);\r\n        var b = bi.toString(2);\r\n        var padLen = 7 - b.length % 7;\r\n        if (padLen == 7)\r\n            padLen = 0;\r\n        var bPad = '';\r\n        for (var i = 0; i < padLen; i++)\r\n            bPad += '0';\r\n        b = bPad + b;\r\n        for (var i = 0; i < b.length - 1; i += 7) {\r\n            var b8 = b.substr(i, 7);\r\n            if (i != b.length - 7)\r\n                b8 = '1' + b8;\r\n            h += itox(parseInt(b8, 2));\r\n        }\r\n        return h;\r\n    };\r\n    if (!oidString.match(/^[0-9.]+$/)) {\r\n        throw \"malformed oid string: \" + oidString;\r\n    }\r\n    var h = '';\r\n    var a = oidString.split('.');\r\n    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\r\n    h += itox(i0);\r\n    a.splice(0, 2);\r\n    for (var i = 0; i < a.length; i++) {\r\n        h += roidtox(a[i]);\r\n    }\r\n    return h;\r\n};\r\n// ********************************************************************\r\n//  Abstract ASN.1 Classes\r\n// ********************************************************************\r\n// ********************************************************************\r\n/**\r\n * base class for ASN.1 DER encoder object\r\n * @name KJUR.asn1.ASN1Object\r\n * @class base class for ASN.1 DER encoder object\r\n * @property {Boolean} isModified flag whether internal data was changed\r\n * @property {String} hTLV hexadecimal string of ASN.1 TLV\r\n * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)\r\n * @property {String} hL hexadecimal string of ASN.1 TLV length(L)\r\n * @property {String} hV hexadecimal string of ASN.1 TLV value(V)\r\n * @description\r\n */\r\nKJUR.asn1.ASN1Object = function () {\r\n    var isModified = true;\r\n    var hTLV = null;\r\n    var hT = '00';\r\n    var hL = '00';\r\n    var hV = '';\r\n    /**\r\n     * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)\r\n     * @name getLengthHexFromValue\r\n     * @memberOf KJUR.asn1.ASN1Object#\r\n     * @function\r\n     * @return {String} hexadecimal string of ASN.1 TLV length(L)\r\n     */\r\n    this.getLengthHexFromValue = function () {\r\n        if (typeof this.hV == \"undefined\" || this.hV == null) {\r\n            throw \"this.hV is null or undefined.\";\r\n        }\r\n        if (this.hV.length % 2 == 1) {\r\n            throw \"value hex must be even length: n=\" + hV.length + \",v=\" + this.hV;\r\n        }\r\n        var n = this.hV.length / 2;\r\n        var hN = n.toString(16);\r\n        if (hN.length % 2 == 1) {\r\n            hN = \"0\" + hN;\r\n        }\r\n        if (n < 128) {\r\n            return hN;\r\n        }\r\n        else {\r\n            var hNlen = hN.length / 2;\r\n            if (hNlen > 15) {\r\n                throw \"ASN.1 length too long to represent by 8x: n = \" + n.toString(16);\r\n            }\r\n            var head = 128 + hNlen;\r\n            return head.toString(16) + hN;\r\n        }\r\n    };\r\n    /**\r\n     * get hexadecimal string of ASN.1 TLV bytes\r\n     * @name getEncodedHex\r\n     * @memberOf KJUR.asn1.ASN1Object#\r\n     * @function\r\n     * @return {String} hexadecimal string of ASN.1 TLV\r\n     */\r\n    this.getEncodedHex = function () {\r\n        if (this.hTLV == null || this.isModified) {\r\n            this.hV = this.getFreshValueHex();\r\n            this.hL = this.getLengthHexFromValue();\r\n            this.hTLV = this.hT + this.hL + this.hV;\r\n            this.isModified = false;\r\n            //alert(\"first time: \" + this.hTLV);\r\n        }\r\n        return this.hTLV;\r\n    };\r\n    /**\r\n     * get hexadecimal string of ASN.1 TLV value(V) bytes\r\n     * @name getValueHex\r\n     * @memberOf KJUR.asn1.ASN1Object#\r\n     * @function\r\n     * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes\r\n     */\r\n    this.getValueHex = function () {\r\n        this.getEncodedHex();\r\n        return this.hV;\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return '';\r\n    };\r\n};\r\n// == BEGIN DERAbstractString ================================================\r\n/**\r\n * base class for ASN.1 DER string classes\r\n * @name KJUR.asn1.DERAbstractString\r\n * @class base class for ASN.1 DER string classes\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @property {String} s internal string of value\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>str - specify initial ASN.1 value(V) by a string</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n */\r\nKJUR.asn1.DERAbstractString = function (params) {\r\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\r\n    var s = null;\r\n    var hV = null;\r\n    /**\r\n     * get string value of this string object\r\n     * @name getString\r\n     * @memberOf KJUR.asn1.DERAbstractString#\r\n     * @function\r\n     * @return {String} string value of this string object\r\n     */\r\n    this.getString = function () {\r\n        return this.s;\r\n    };\r\n    /**\r\n     * set value by a string\r\n     * @name setString\r\n     * @memberOf KJUR.asn1.DERAbstractString#\r\n     * @function\r\n     * @param {String} newS value by a string to set\r\n     */\r\n    this.setString = function (newS) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.s = newS;\r\n        this.hV = stohex(this.s);\r\n    };\r\n    /**\r\n     * set value by a hexadecimal string\r\n     * @name setStringHex\r\n     * @memberOf KJUR.asn1.DERAbstractString#\r\n     * @function\r\n     * @param {String} newHexString value by a hexadecimal string to set\r\n     */\r\n    this.setStringHex = function (newHexString) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.s = null;\r\n        this.hV = newHexString;\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params == \"string\") {\r\n            this.setString(params);\r\n        }\r\n        else if (typeof params['str'] != \"undefined\") {\r\n            this.setString(params['str']);\r\n        }\r\n        else if (typeof params['hex'] != \"undefined\") {\r\n            this.setStringHex(params['hex']);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);\r\n// == END   DERAbstractString ================================================\r\n// == BEGIN DERAbstractTime ==================================================\r\n/**\r\n * base class for ASN.1 DER Generalized/UTCTime class\r\n * @name KJUR.asn1.DERAbstractTime\r\n * @class base class for ASN.1 DER Generalized/UTCTime class\r\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * @see KJUR.asn1.ASN1Object - superclass\r\n */\r\nKJUR.asn1.DERAbstractTime = function (params) {\r\n    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);\r\n    var s = null;\r\n    var date = null;\r\n    // --- PRIVATE METHODS --------------------\r\n    this.localDateToUTC = function (d) {\r\n        utc = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n        var utcDate = new Date(utc);\r\n        return utcDate;\r\n    };\r\n    /*\r\n     * format date string by Data object\r\n     * @name formatDate\r\n     * @memberOf KJUR.asn1.AbstractTime;\r\n     * @param {Date} dateObject\r\n     * @param {string} type 'utc' or 'gen'\r\n     * @param {boolean} withMillis flag for with millisections or not\r\n     * @description\r\n     * 'withMillis' flag is supported from asn1 1.0.6.\r\n     */\r\n    this.formatDate = function (dateObject, type, withMillis) {\r\n        var pad = this.zeroPadding;\r\n        var d = this.localDateToUTC(dateObject);\r\n        var year = String(d.getFullYear());\r\n        if (type == 'utc')\r\n            year = year.substr(2, 2);\r\n        var month = pad(String(d.getMonth() + 1), 2);\r\n        var day = pad(String(d.getDate()), 2);\r\n        var hour = pad(String(d.getHours()), 2);\r\n        var min = pad(String(d.getMinutes()), 2);\r\n        var sec = pad(String(d.getSeconds()), 2);\r\n        var s = year + month + day + hour + min + sec;\r\n        if (withMillis === true) {\r\n            var millis = d.getMilliseconds();\r\n            if (millis != 0) {\r\n                var sMillis = pad(String(millis), 3);\r\n                sMillis = sMillis.replace(/[0]+$/, \"\");\r\n                s = s + \".\" + sMillis;\r\n            }\r\n        }\r\n        return s + \"Z\";\r\n    };\r\n    this.zeroPadding = function (s, len) {\r\n        if (s.length >= len)\r\n            return s;\r\n        return new Array(len - s.length + 1).join('0') + s;\r\n    };\r\n    // --- PUBLIC METHODS --------------------\r\n    /**\r\n     * get string value of this string object\r\n     * @name getString\r\n     * @memberOf KJUR.asn1.DERAbstractTime#\r\n     * @function\r\n     * @return {String} string value of this time object\r\n     */\r\n    this.getString = function () {\r\n        return this.s;\r\n    };\r\n    /**\r\n     * set value by a string\r\n     * @name setString\r\n     * @memberOf KJUR.asn1.DERAbstractTime#\r\n     * @function\r\n     * @param {String} newS value by a string to set such like \"130430235959Z\"\r\n     */\r\n    this.setString = function (newS) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.s = newS;\r\n        this.hV = stohex(newS);\r\n    };\r\n    /**\r\n     * set value by a Date object\r\n     * @name setByDateValue\r\n     * @memberOf KJUR.asn1.DERAbstractTime#\r\n     * @function\r\n     * @param {Integer} year year of date (ex. 2013)\r\n     * @param {Integer} month month of date between 1 and 12 (ex. 12)\r\n     * @param {Integer} day day of month\r\n     * @param {Integer} hour hours of date\r\n     * @param {Integer} min minutes of date\r\n     * @param {Integer} sec seconds of date\r\n     */\r\n    this.setByDateValue = function (year, month, day, hour, min, sec) {\r\n        var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));\r\n        this.setByDate(dateObject);\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);\r\n// == END   DERAbstractTime ==================================================\r\n// == BEGIN DERAbstractStructured ============================================\r\n/**\r\n * base class for ASN.1 DER structured class\r\n * @name KJUR.asn1.DERAbstractStructured\r\n * @class base class for ASN.1 DER structured class\r\n * @property {Array} asn1Array internal array of ASN1Object\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * @see KJUR.asn1.ASN1Object - superclass\r\n */\r\nKJUR.asn1.DERAbstractStructured = function (params) {\r\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\r\n    var asn1Array = null;\r\n    /**\r\n     * set value by array of ASN1Object\r\n     * @name setByASN1ObjectArray\r\n     * @memberOf KJUR.asn1.DERAbstractStructured#\r\n     * @function\r\n     * @param {array} asn1ObjectArray array of ASN1Object to set\r\n     */\r\n    this.setByASN1ObjectArray = function (asn1ObjectArray) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.asn1Array = asn1ObjectArray;\r\n    };\r\n    /**\r\n     * append an ASN1Object to internal array\r\n     * @name appendASN1Object\r\n     * @memberOf KJUR.asn1.DERAbstractStructured#\r\n     * @function\r\n     * @param {ASN1Object} asn1Object to add\r\n     */\r\n    this.appendASN1Object = function (asn1Object) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.asn1Array.push(asn1Object);\r\n    };\r\n    this.asn1Array = new Array();\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params['array'] != \"undefined\") {\r\n            this.asn1Array = params['array'];\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n//  ASN.1 Object Classes\r\n// ********************************************************************\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Boolean\r\n * @name KJUR.asn1.DERBoolean\r\n * @class class for ASN.1 DER Boolean\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * @see KJUR.asn1.ASN1Object - superclass\r\n */\r\nKJUR.asn1.DERBoolean = function () {\r\n    KJUR.asn1.DERBoolean.superclass.constructor.call(this);\r\n    this.hT = \"01\";\r\n    this.hTLV = \"0101ff\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Integer\r\n * @name KJUR.asn1.DERInteger\r\n * @class class for ASN.1 DER Integer\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\r\n * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n */\r\nKJUR.asn1.DERInteger = function (params) {\r\n    KJUR.asn1.DERInteger.superclass.constructor.call(this);\r\n    this.hT = \"02\";\r\n    /**\r\n     * set value by Tom Wu's BigInteger object\r\n     * @name setByBigInteger\r\n     * @memberOf KJUR.asn1.DERInteger#\r\n     * @function\r\n     * @param {BigInteger} bigIntegerValue to set\r\n     */\r\n    this.setByBigInteger = function (bigIntegerValue) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\r\n    };\r\n    /**\r\n     * set value by integer value\r\n     * @name setByInteger\r\n     * @memberOf KJUR.asn1.DERInteger\r\n     * @function\r\n     * @param {Integer} integer value to set\r\n     */\r\n    this.setByInteger = function (intValue) {\r\n        var bi = new BigInteger(String(intValue), 10);\r\n        this.setByBigInteger(bi);\r\n    };\r\n    /**\r\n     * set value by integer value\r\n     * @name setValueHex\r\n     * @memberOf KJUR.asn1.DERInteger#\r\n     * @function\r\n     * @param {String} hexadecimal string of integer value\r\n     * @description\r\n     * <br/>\r\n     * NOTE: Value shall be represented by minimum octet length of\r\n     * two's complement representation.\r\n     * @example\r\n     * new KJUR.asn1.DERInteger(123);\r\n     * new KJUR.asn1.DERInteger({'int': 123});\r\n     * new KJUR.asn1.DERInteger({'hex': '1fad'});\r\n     */\r\n    this.setValueHex = function (newHexString) {\r\n        this.hV = newHexString;\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params['bigint'] != \"undefined\") {\r\n            this.setByBigInteger(params['bigint']);\r\n        }\r\n        else if (typeof params['int'] != \"undefined\") {\r\n            this.setByInteger(params['int']);\r\n        }\r\n        else if (typeof params == \"number\") {\r\n            this.setByInteger(params);\r\n        }\r\n        else if (typeof params['hex'] != \"undefined\") {\r\n            this.setValueHex(params['hex']);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER encoded BitString primitive\r\n * @name KJUR.asn1.DERBitString\r\n * @class class for ASN.1 DER encoded BitString primitive\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>bin - specify binary string (ex. '10111')</li>\r\n * <li>array - specify array of boolean (ex. [true,false,true,true])</li>\r\n * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>\r\n * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}\r\n * argument for \"BitString encapsulates\" structure.</li>\r\n * </ul>\r\n * NOTE1: 'params' can be omitted.<br/>\r\n * NOTE2: 'obj' parameter have been supported since\r\n * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>\r\n * @example\r\n * // default constructor\r\n * o = new KJUR.asn1.DERBitString();\r\n * // initialize with binary string\r\n * o = new KJUR.asn1.DERBitString({bin: \"1011\"});\r\n * // initialize with boolean array\r\n * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});\r\n * // initialize with hexadecimal string (04 is unused bits)\r\n * o = new KJUR.asn1.DEROctetString({hex: \"04bac0\"});\r\n * // initialize with ASN1Util.newObject argument for encapsulated\r\n * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\r\n * // above generates a ASN.1 data like this:\r\n * // BIT STRING, encapsulates {\r\n * //   SEQUENCE {\r\n * //     INTEGER 3\r\n * //     PrintableString 'aaa'\r\n * //     }\r\n * //   }\r\n */\r\nKJUR.asn1.DERBitString = function (params) {\r\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\r\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\r\n        params.hex = \"00\" + o.getEncodedHex();\r\n    }\r\n    KJUR.asn1.DERBitString.superclass.constructor.call(this);\r\n    this.hT = \"03\";\r\n    /**\r\n     * set ASN.1 value(V) by a hexadecimal string including unused bits\r\n     * @name setHexValueIncludingUnusedBits\r\n     * @memberOf KJUR.asn1.DERBitString#\r\n     * @function\r\n     * @param {String} newHexStringIncludingUnusedBits\r\n     */\r\n    this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.hV = newHexStringIncludingUnusedBits;\r\n    };\r\n    /**\r\n     * set ASN.1 value(V) by unused bit and hexadecimal string of value\r\n     * @name setUnusedBitsAndHexValue\r\n     * @memberOf KJUR.asn1.DERBitString#\r\n     * @function\r\n     * @param {Integer} unusedBits\r\n     * @param {String} hValue\r\n     */\r\n    this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {\r\n        if (unusedBits < 0 || 7 < unusedBits) {\r\n            throw \"unused bits shall be from 0 to 7: u = \" + unusedBits;\r\n        }\r\n        var hUnusedBits = \"0\" + unusedBits;\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.hV = hUnusedBits + hValue;\r\n    };\r\n    /**\r\n     * set ASN.1 DER BitString by binary string<br/>\r\n     * @name setByBinaryString\r\n     * @memberOf KJUR.asn1.DERBitString#\r\n     * @function\r\n     * @param {String} binaryString binary value string (i.e. '10111')\r\n     * @description\r\n     * Its unused bits will be calculated automatically by length of\r\n     * 'binaryValue'. <br/>\r\n     * NOTE: Trailing zeros '0' will be ignored.\r\n     * @example\r\n     * o = new KJUR.asn1.DERBitString();\r\n     * o.setByBooleanArray(\"01011\");\r\n     */\r\n    this.setByBinaryString = function (binaryString) {\r\n        binaryString = binaryString.replace(/0+$/, '');\r\n        var unusedBits = 8 - binaryString.length % 8;\r\n        if (unusedBits == 8)\r\n            unusedBits = 0;\r\n        for (var i = 0; i <= unusedBits; i++) {\r\n            binaryString += '0';\r\n        }\r\n        var h = '';\r\n        for (var i = 0; i < binaryString.length - 1; i += 8) {\r\n            var b = binaryString.substr(i, 8);\r\n            var x = parseInt(b, 2).toString(16);\r\n            if (x.length == 1)\r\n                x = '0' + x;\r\n            h += x;\r\n        }\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.hV = '0' + unusedBits + h;\r\n    };\r\n    /**\r\n     * set ASN.1 TLV value(V) by an array of boolean<br/>\r\n     * @name setByBooleanArray\r\n     * @memberOf KJUR.asn1.DERBitString#\r\n     * @function\r\n     * @param {array} booleanArray array of boolean (ex. [true, false, true])\r\n     * @description\r\n     * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.\r\n     * @example\r\n     * o = new KJUR.asn1.DERBitString();\r\n     * o.setByBooleanArray([false, true, false, true, true]);\r\n     */\r\n    this.setByBooleanArray = function (booleanArray) {\r\n        var s = '';\r\n        for (var i = 0; i < booleanArray.length; i++) {\r\n            if (booleanArray[i] == true) {\r\n                s += '1';\r\n            }\r\n            else {\r\n                s += '0';\r\n            }\r\n        }\r\n        this.setByBinaryString(s);\r\n    };\r\n    /**\r\n     * generate an array of falses with specified length<br/>\r\n     * @name newFalseArray\r\n     * @memberOf KJUR.asn1.DERBitString\r\n     * @function\r\n     * @param {Integer} nLength length of array to generate\r\n     * @return {array} array of boolean falses\r\n     * @description\r\n     * This static method may be useful to initialize boolean array.\r\n     * @example\r\n     * o = new KJUR.asn1.DERBitString();\r\n     * o.newFalseArray(3) &rarr; [false, false, false]\r\n     */\r\n    this.newFalseArray = function (nLength) {\r\n        var a = new Array(nLength);\r\n        for (var i = 0; i < nLength; i++) {\r\n            a[i] = false;\r\n        }\r\n        return a;\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params == \"string\" && params.toLowerCase().match(/^[0-9a-f]+$/)) {\r\n            this.setHexValueIncludingUnusedBits(params);\r\n        }\r\n        else if (typeof params['hex'] != \"undefined\") {\r\n            this.setHexValueIncludingUnusedBits(params['hex']);\r\n        }\r\n        else if (typeof params['bin'] != \"undefined\") {\r\n            this.setByBinaryString(params['bin']);\r\n        }\r\n        else if (typeof params['array'] != \"undefined\") {\r\n            this.setByBooleanArray(params['array']);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER OctetString<br/>\r\n * @name KJUR.asn1.DEROctetString\r\n * @class class for ASN.1 DER OctetString\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * This class provides ASN.1 OctetString simple type.<br/>\r\n * Supported \"params\" attributes are:\r\n * <ul>\r\n * <li>str - to set a string as a value</li>\r\n * <li>hex - to set a hexadecimal string as a value</li>\r\n * <li>obj - to set a encapsulated ASN.1 value by JSON object\r\n * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>\r\n * </ul>\r\n * NOTE: A parameter 'obj' have been supported\r\n * for \"OCTET STRING, encapsulates\" structure.\r\n * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n * @example\r\n * // default constructor\r\n * o = new KJUR.asn1.DEROctetString();\r\n * // initialize with string\r\n * o = new KJUR.asn1.DEROctetString({str: \"aaa\"});\r\n * // initialize with hexadecimal string\r\n * o = new KJUR.asn1.DEROctetString({hex: \"616161\"});\r\n * // initialize with ASN1Util.newObject argument\r\n * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\r\n * // above generates a ASN.1 data like this:\r\n * // OCTET STRING, encapsulates {\r\n * //   SEQUENCE {\r\n * //     INTEGER 3\r\n * //     PrintableString 'aaa'\r\n * //     }\r\n * //   }\r\n */\r\nKJUR.asn1.DEROctetString = function (params) {\r\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\r\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\r\n        params.hex = o.getEncodedHex();\r\n    }\r\n    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);\r\n    this.hT = \"04\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Null\r\n * @name KJUR.asn1.DERNull\r\n * @class class for ASN.1 DER Null\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * @see KJUR.asn1.ASN1Object - superclass\r\n */\r\nKJUR.asn1.DERNull = function () {\r\n    KJUR.asn1.DERNull.superclass.constructor.call(this);\r\n    this.hT = \"05\";\r\n    this.hTLV = \"0500\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER ObjectIdentifier\r\n * @name KJUR.asn1.DERObjectIdentifier\r\n * @class class for ASN.1 DER ObjectIdentifier\r\n * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n */\r\nKJUR.asn1.DERObjectIdentifier = function (params) {\r\n    var itox = function (i) {\r\n        var h = i.toString(16);\r\n        if (h.length == 1)\r\n            h = '0' + h;\r\n        return h;\r\n    };\r\n    var roidtox = function (roid) {\r\n        var h = '';\r\n        var bi = new BigInteger(roid, 10);\r\n        var b = bi.toString(2);\r\n        var padLen = 7 - b.length % 7;\r\n        if (padLen == 7)\r\n            padLen = 0;\r\n        var bPad = '';\r\n        for (var i = 0; i < padLen; i++)\r\n            bPad += '0';\r\n        b = bPad + b;\r\n        for (var i = 0; i < b.length - 1; i += 7) {\r\n            var b8 = b.substr(i, 7);\r\n            if (i != b.length - 7)\r\n                b8 = '1' + b8;\r\n            h += itox(parseInt(b8, 2));\r\n        }\r\n        return h;\r\n    };\r\n    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);\r\n    this.hT = \"06\";\r\n    /**\r\n     * set value by a hexadecimal string\r\n     * @name setValueHex\r\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\r\n     * @function\r\n     * @param {String} newHexString hexadecimal value of OID bytes\r\n     */\r\n    this.setValueHex = function (newHexString) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.s = null;\r\n        this.hV = newHexString;\r\n    };\r\n    /**\r\n     * set value by a OID string<br/>\r\n     * @name setValueOidString\r\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\r\n     * @function\r\n     * @param {String} oidString OID string (ex. 2.5.4.13)\r\n     * @example\r\n     * o = new KJUR.asn1.DERObjectIdentifier();\r\n     * o.setValueOidString(\"2.5.4.13\");\r\n     */\r\n    this.setValueOidString = function (oidString) {\r\n        if (!oidString.match(/^[0-9.]+$/)) {\r\n            throw \"malformed oid string: \" + oidString;\r\n        }\r\n        var h = '';\r\n        var a = oidString.split('.');\r\n        var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\r\n        h += itox(i0);\r\n        a.splice(0, 2);\r\n        for (var i = 0; i < a.length; i++) {\r\n            h += roidtox(a[i]);\r\n        }\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.s = null;\r\n        this.hV = h;\r\n    };\r\n    /**\r\n     * set value by a OID name\r\n     * @name setValueName\r\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\r\n     * @function\r\n     * @param {String} oidName OID name (ex. 'serverAuth')\r\n     * @since 1.0.1\r\n     * @description\r\n     * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.\r\n     * Otherwise raise error.\r\n     * @example\r\n     * o = new KJUR.asn1.DERObjectIdentifier();\r\n     * o.setValueName(\"serverAuth\");\r\n     */\r\n    this.setValueName = function (oidName) {\r\n        var oid = KJUR.asn1.x509.OID.name2oid(oidName);\r\n        if (oid !== '') {\r\n            this.setValueOidString(oid);\r\n        }\r\n        else {\r\n            throw \"DERObjectIdentifier oidName undefined: \" + oidName;\r\n        }\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (params !== undefined) {\r\n        if (typeof params === \"string\") {\r\n            if (params.match(/^[0-2].[0-9.]+$/)) {\r\n                this.setValueOidString(params);\r\n            }\r\n            else {\r\n                this.setValueName(params);\r\n            }\r\n        }\r\n        else if (params.oid !== undefined) {\r\n            this.setValueOidString(params.oid);\r\n        }\r\n        else if (params.hex !== undefined) {\r\n            this.setValueHex(params.hex);\r\n        }\r\n        else if (params.name !== undefined) {\r\n            this.setValueName(params.name);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Enumerated\r\n * @name KJUR.asn1.DEREnumerated\r\n * @class class for ASN.1 DER Enumerated\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n * @example\r\n * new KJUR.asn1.DEREnumerated(123);\r\n * new KJUR.asn1.DEREnumerated({int: 123});\r\n * new KJUR.asn1.DEREnumerated({hex: '1fad'});\r\n */\r\nKJUR.asn1.DEREnumerated = function (params) {\r\n    KJUR.asn1.DEREnumerated.superclass.constructor.call(this);\r\n    this.hT = \"0a\";\r\n    /**\r\n     * set value by Tom Wu's BigInteger object\r\n     * @name setByBigInteger\r\n     * @memberOf KJUR.asn1.DEREnumerated#\r\n     * @function\r\n     * @param {BigInteger} bigIntegerValue to set\r\n     */\r\n    this.setByBigInteger = function (bigIntegerValue) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\r\n    };\r\n    /**\r\n     * set value by integer value\r\n     * @name setByInteger\r\n     * @memberOf KJUR.asn1.DEREnumerated#\r\n     * @function\r\n     * @param {Integer} integer value to set\r\n     */\r\n    this.setByInteger = function (intValue) {\r\n        var bi = new BigInteger(String(intValue), 10);\r\n        this.setByBigInteger(bi);\r\n    };\r\n    /**\r\n     * set value by integer value\r\n     * @name setValueHex\r\n     * @memberOf KJUR.asn1.DEREnumerated#\r\n     * @function\r\n     * @param {String} hexadecimal string of integer value\r\n     * @description\r\n     * <br/>\r\n     * NOTE: Value shall be represented by minimum octet length of\r\n     * two's complement representation.\r\n     */\r\n    this.setValueHex = function (newHexString) {\r\n        this.hV = newHexString;\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params['int'] != \"undefined\") {\r\n            this.setByInteger(params['int']);\r\n        }\r\n        else if (typeof params == \"number\") {\r\n            this.setByInteger(params);\r\n        }\r\n        else if (typeof params['hex'] != \"undefined\") {\r\n            this.setValueHex(params['hex']);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER UTF8String\r\n * @name KJUR.asn1.DERUTF8String\r\n * @class class for ASN.1 DER UTF8String\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n */\r\nKJUR.asn1.DERUTF8String = function (params) {\r\n    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);\r\n    this.hT = \"0c\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER NumericString\r\n * @name KJUR.asn1.DERNumericString\r\n * @class class for ASN.1 DER NumericString\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n */\r\nKJUR.asn1.DERNumericString = function (params) {\r\n    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);\r\n    this.hT = \"12\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER PrintableString\r\n * @name KJUR.asn1.DERPrintableString\r\n * @class class for ASN.1 DER PrintableString\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n */\r\nKJUR.asn1.DERPrintableString = function (params) {\r\n    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);\r\n    this.hT = \"13\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER TeletexString\r\n * @name KJUR.asn1.DERTeletexString\r\n * @class class for ASN.1 DER TeletexString\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n */\r\nKJUR.asn1.DERTeletexString = function (params) {\r\n    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);\r\n    this.hT = \"14\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER IA5String\r\n * @name KJUR.asn1.DERIA5String\r\n * @class class for ASN.1 DER IA5String\r\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\r\n * @extends KJUR.asn1.DERAbstractString\r\n * @description\r\n * @see KJUR.asn1.DERAbstractString - superclass\r\n */\r\nKJUR.asn1.DERIA5String = function (params) {\r\n    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);\r\n    this.hT = \"16\";\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER UTCTime\r\n * @name KJUR.asn1.DERUTCTime\r\n * @class class for ASN.1 DER UTCTime\r\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\r\n * @extends KJUR.asn1.DERAbstractTime\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * <li>date - specify Date object.</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n * <h4>EXAMPLES</h4>\r\n * @example\r\n * d1 = new KJUR.asn1.DERUTCTime();\r\n * d1.setString('130430125959Z');\r\n *\r\n * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});\r\n * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});\r\n * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');\r\n */\r\nKJUR.asn1.DERUTCTime = function (params) {\r\n    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);\r\n    this.hT = \"17\";\r\n    /**\r\n     * set value by a Date object<br/>\r\n     * @name setByDate\r\n     * @memberOf KJUR.asn1.DERUTCTime#\r\n     * @function\r\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\r\n     * @example\r\n     * o = new KJUR.asn1.DERUTCTime();\r\n     * o.setByDate(new Date(\"2016/12/31\"));\r\n     */\r\n    this.setByDate = function (dateObject) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.date = dateObject;\r\n        this.s = this.formatDate(this.date, 'utc');\r\n        this.hV = stohex(this.s);\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        if (typeof this.date == \"undefined\" && typeof this.s == \"undefined\") {\r\n            this.date = new Date();\r\n            this.s = this.formatDate(this.date, 'utc');\r\n            this.hV = stohex(this.s);\r\n        }\r\n        return this.hV;\r\n    };\r\n    if (params !== undefined) {\r\n        if (params.str !== undefined) {\r\n            this.setString(params.str);\r\n        }\r\n        else if (typeof params == \"string\" && params.match(/^[0-9]{12}Z$/)) {\r\n            this.setString(params);\r\n        }\r\n        else if (params.hex !== undefined) {\r\n            this.setStringHex(params.hex);\r\n        }\r\n        else if (params.date !== undefined) {\r\n            this.setByDate(params.date);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER GeneralizedTime\r\n * @name KJUR.asn1.DERGeneralizedTime\r\n * @class class for ASN.1 DER GeneralizedTime\r\n * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})\r\n * @property {Boolean} withMillis flag to show milliseconds or not\r\n * @extends KJUR.asn1.DERAbstractTime\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>\r\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\r\n * <li>date - specify Date object.</li>\r\n * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>\r\n * </ul>\r\n * NOTE1: 'params' can be omitted.\r\n * NOTE2: 'withMillis' property is supported from asn1 1.0.6.\r\n */\r\nKJUR.asn1.DERGeneralizedTime = function (params) {\r\n    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);\r\n    this.hT = \"18\";\r\n    this.withMillis = false;\r\n    /**\r\n     * set value by a Date object\r\n     * @name setByDate\r\n     * @memberOf KJUR.asn1.DERGeneralizedTime#\r\n     * @function\r\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\r\n     * @example\r\n     * When you specify UTC time, use 'Date.UTC' method like this:<br/>\r\n     * o1 = new DERUTCTime();\r\n     * o1.setByDate(date);\r\n     *\r\n     * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59\r\n     */\r\n    this.setByDate = function (dateObject) {\r\n        this.hTLV = null;\r\n        this.isModified = true;\r\n        this.date = dateObject;\r\n        this.s = this.formatDate(this.date, 'gen', this.withMillis);\r\n        this.hV = stohex(this.s);\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        if (this.date === undefined && this.s === undefined) {\r\n            this.date = new Date();\r\n            this.s = this.formatDate(this.date, 'gen', this.withMillis);\r\n            this.hV = stohex(this.s);\r\n        }\r\n        return this.hV;\r\n    };\r\n    if (params !== undefined) {\r\n        if (params.str !== undefined) {\r\n            this.setString(params.str);\r\n        }\r\n        else if (typeof params == \"string\" && params.match(/^[0-9]{14}Z$/)) {\r\n            this.setString(params);\r\n        }\r\n        else if (params.hex !== undefined) {\r\n            this.setStringHex(params.hex);\r\n        }\r\n        else if (params.date !== undefined) {\r\n            this.setByDate(params.date);\r\n        }\r\n        if (params.millis === true) {\r\n            this.withMillis = true;\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Sequence\r\n * @name KJUR.asn1.DERSequence\r\n * @class class for ASN.1 DER Sequence\r\n * @extends KJUR.asn1.DERAbstractStructured\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>array - specify array of ASN1Object to set elements of content</li>\r\n * </ul>\r\n * NOTE: 'params' can be omitted.\r\n */\r\nKJUR.asn1.DERSequence = function (params) {\r\n    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);\r\n    this.hT = \"30\";\r\n    this.getFreshValueHex = function () {\r\n        var h = '';\r\n        for (var i = 0; i < this.asn1Array.length; i++) {\r\n            var asn1Obj = this.asn1Array[i];\r\n            h += asn1Obj.getEncodedHex();\r\n        }\r\n        this.hV = h;\r\n        return this.hV;\r\n    };\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER Set\r\n * @name KJUR.asn1.DERSet\r\n * @class class for ASN.1 DER Set\r\n * @extends KJUR.asn1.DERAbstractStructured\r\n * @description\r\n * <br/>\r\n * As for argument 'params' for constructor, you can specify one of\r\n * following properties:\r\n * <ul>\r\n * <li>array - specify array of ASN1Object to set elements of content</li>\r\n * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>\r\n * </ul>\r\n * NOTE1: 'params' can be omitted.<br/>\r\n * NOTE2: sortflag is supported since 1.0.5.\r\n */\r\nKJUR.asn1.DERSet = function (params) {\r\n    KJUR.asn1.DERSet.superclass.constructor.call(this, params);\r\n    this.hT = \"31\";\r\n    this.sortFlag = true; // item shall be sorted only in ASN.1 DER\r\n    this.getFreshValueHex = function () {\r\n        var a = new Array();\r\n        for (var i = 0; i < this.asn1Array.length; i++) {\r\n            var asn1Obj = this.asn1Array[i];\r\n            a.push(asn1Obj.getEncodedHex());\r\n        }\r\n        if (this.sortFlag == true)\r\n            a.sort();\r\n        this.hV = a.join('');\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params.sortflag != \"undefined\" &&\r\n            params.sortflag == false)\r\n            this.sortFlag = false;\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);\r\n// ********************************************************************\r\n/**\r\n * class for ASN.1 DER TaggedObject\r\n * @name KJUR.asn1.DERTaggedObject\r\n * @class class for ASN.1 DER TaggedObject\r\n * @extends KJUR.asn1.ASN1Object\r\n * @description\r\n * <br/>\r\n * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.\r\n * For example, if you find '[1]' tag in a ASN.1 dump,\r\n * 'tagNoHex' will be 'a1'.\r\n * <br/>\r\n * As for optional argument 'params' for constructor, you can specify *ANY* of\r\n * following properties:\r\n * <ul>\r\n * <li>explicit - specify true if this is explicit tag otherwise false\r\n *     (default is 'true').</li>\r\n * <li>tag - specify tag (default is 'a0' which means [0])</li>\r\n * <li>obj - specify ASN1Object which is tagged</li>\r\n * </ul>\r\n * @example\r\n * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});\r\n * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});\r\n * hex = d2.getEncodedHex();\r\n */\r\nKJUR.asn1.DERTaggedObject = function (params) {\r\n    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);\r\n    this.hT = \"a0\";\r\n    this.hV = '';\r\n    this.isExplicit = true;\r\n    this.asn1Object = null;\r\n    /**\r\n     * set value by an ASN1Object\r\n     * @name setString\r\n     * @memberOf KJUR.asn1.DERTaggedObject#\r\n     * @function\r\n     * @param {Boolean} isExplicitFlag flag for explicit/implicit tag\r\n     * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag\r\n     * @param {ASN1Object} asn1Object ASN.1 to encapsulate\r\n     */\r\n    this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {\r\n        this.hT = tagNoHex;\r\n        this.isExplicit = isExplicitFlag;\r\n        this.asn1Object = asn1Object;\r\n        if (this.isExplicit) {\r\n            this.hV = this.asn1Object.getEncodedHex();\r\n            this.hTLV = null;\r\n            this.isModified = true;\r\n        }\r\n        else {\r\n            this.hV = null;\r\n            this.hTLV = asn1Object.getEncodedHex();\r\n            this.hTLV = this.hTLV.replace(/^../, tagNoHex);\r\n            this.isModified = false;\r\n        }\r\n    };\r\n    this.getFreshValueHex = function () {\r\n        return this.hV;\r\n    };\r\n    if (typeof params != \"undefined\") {\r\n        if (typeof params['tag'] != \"undefined\") {\r\n            this.hT = params['tag'];\r\n        }\r\n        if (typeof params['explicit'] != \"undefined\") {\r\n            this.isExplicit = params['explicit'];\r\n        }\r\n        if (typeof params['obj'] != \"undefined\") {\r\n            this.asn1Object = params['obj'];\r\n            this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);\r\n        }\r\n    }\r\n};\r\nYAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { hex2b64 } from \"./lib/jsbn/base64\";\r\nimport { Hex } from \"./lib/asn1js/hex\";\r\nimport { Base64 } from \"./lib/asn1js/base64\";\r\nimport { ASN1 } from \"./lib/asn1js/asn1\";\r\nimport { RSAKey } from \"./lib/jsbn/rsa\";\r\nimport { parseBigInt } from \"./lib/jsbn/jsbn\";\r\nimport { KJUR } from \"./lib/jsrsasign/asn1-1.0\";\r\n/**\r\n * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.\r\n * This object is just a decorator for parsing the key parameter\r\n * @param {string|Object} key - The key in string format, or an object containing\r\n * the parameters needed to build a RSAKey object.\r\n * @constructor\r\n */\r\nvar JSEncryptRSAKey = /** @class */ (function (_super) {\r\n    __extends(JSEncryptRSAKey, _super);\r\n    function JSEncryptRSAKey(key) {\r\n        var _this = _super.call(this) || this;\r\n        // Call the super constructor.\r\n        //  RSAKey.call(this);\r\n        // If a key key was provided.\r\n        if (key) {\r\n            // If this is a string...\r\n            if (typeof key === \"string\") {\r\n                _this.parseKey(key);\r\n            }\r\n            else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||\r\n                JSEncryptRSAKey.hasPublicKeyProperty(key)) {\r\n                // Set the values for the key.\r\n                _this.parsePropertiesFrom(key);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Method to parse a pem encoded string containing both a public or private key.\r\n     * The method will translate the pem encoded string in a der encoded string and\r\n     * will parse private key and public key parameters. This method accepts public key\r\n     * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).\r\n     *\r\n     * @todo Check how many rsa formats use the same format of pkcs #1.\r\n     *\r\n     * The format is defined as:\r\n     * PublicKeyInfo ::= SEQUENCE {\r\n     *   algorithm       AlgorithmIdentifier,\r\n     *   PublicKey       BIT STRING\r\n     * }\r\n     * Where AlgorithmIdentifier is:\r\n     * AlgorithmIdentifier ::= SEQUENCE {\r\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\r\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\r\n     * }\r\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\r\n     * RSAPublicKey ::= SEQUENCE {\r\n     *   modulus           INTEGER,  -- n\r\n     *   publicExponent    INTEGER   -- e\r\n     * }\r\n     * it's possible to examine the structure of the keys obtained from openssl using\r\n     * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/\r\n     * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.prototype.parseKey = function (pem) {\r\n        try {\r\n            var modulus = 0;\r\n            var public_exponent = 0;\r\n            var reHex = /^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/;\r\n            var der = reHex.test(pem) ? Hex.decode(pem) : Base64.unarmor(pem);\r\n            var asn1 = ASN1.decode(der);\r\n            // Fixes a bug with OpenSSL 1.0+ private keys\r\n            if (asn1.sub.length === 3) {\r\n                asn1 = asn1.sub[2].sub[0];\r\n            }\r\n            if (asn1.sub.length === 9) {\r\n                // Parse the private key.\r\n                modulus = asn1.sub[1].getHexStringValue(); // bigint\r\n                this.n = parseBigInt(modulus, 16);\r\n                public_exponent = asn1.sub[2].getHexStringValue(); // int\r\n                this.e = parseInt(public_exponent, 16);\r\n                var private_exponent = asn1.sub[3].getHexStringValue(); // bigint\r\n                this.d = parseBigInt(private_exponent, 16);\r\n                var prime1 = asn1.sub[4].getHexStringValue(); // bigint\r\n                this.p = parseBigInt(prime1, 16);\r\n                var prime2 = asn1.sub[5].getHexStringValue(); // bigint\r\n                this.q = parseBigInt(prime2, 16);\r\n                var exponent1 = asn1.sub[6].getHexStringValue(); // bigint\r\n                this.dmp1 = parseBigInt(exponent1, 16);\r\n                var exponent2 = asn1.sub[7].getHexStringValue(); // bigint\r\n                this.dmq1 = parseBigInt(exponent2, 16);\r\n                var coefficient = asn1.sub[8].getHexStringValue(); // bigint\r\n                this.coeff = parseBigInt(coefficient, 16);\r\n            }\r\n            else if (asn1.sub.length === 2) {\r\n                if (asn1.sub[0].sub) {\r\n                    // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509\r\n                    var bit_string = asn1.sub[1];\r\n                    var sequence = bit_string.sub[0];\r\n                    modulus = sequence.sub[0].getHexStringValue();\r\n                    this.n = parseBigInt(modulus, 16);\r\n                    public_exponent = sequence.sub[1].getHexStringValue();\r\n                    this.e = parseInt(public_exponent, 16);\r\n                }\r\n                else {\r\n                    // Parse ASN.1 RSAPublicKey type as defined by PKCS #1\r\n                    modulus = asn1.sub[0].getHexStringValue();\r\n                    this.n = parseBigInt(modulus, 16);\r\n                    public_exponent = asn1.sub[1].getHexStringValue();\r\n                    this.e = parseInt(public_exponent, 16);\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Translate rsa parameters in a hex encoded string representing the rsa key.\r\n     *\r\n     * The translation follow the ASN.1 notation :\r\n     * RSAPrivateKey ::= SEQUENCE {\r\n     *   version           Version,\r\n     *   modulus           INTEGER,  -- n\r\n     *   publicExponent    INTEGER,  -- e\r\n     *   privateExponent   INTEGER,  -- d\r\n     *   prime1            INTEGER,  -- p\r\n     *   prime2            INTEGER,  -- q\r\n     *   exponent1         INTEGER,  -- d mod (p1)\r\n     *   exponent2         INTEGER,  -- d mod (q-1)\r\n     *   coefficient       INTEGER,  -- (inverse of q) mod p\r\n     * }\r\n     * @returns {string}  DER Encoded String representing the rsa private key\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {\r\n        var options = {\r\n            array: [\r\n                new KJUR.asn1.DERInteger({ int: 0 }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.n }),\r\n                new KJUR.asn1.DERInteger({ int: this.e }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.d }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.p }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.q }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.dmp1 }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.dmq1 }),\r\n                new KJUR.asn1.DERInteger({ bigint: this.coeff }),\r\n            ],\r\n        };\r\n        var seq = new KJUR.asn1.DERSequence(options);\r\n        return seq.getEncodedHex();\r\n    };\r\n    /**\r\n     * base64 (pem) encoded version of the DER encoded representation\r\n     * @returns {string} pem encoded representation without header and footer\r\n     * @public\r\n     */\r\n    JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {\r\n        return hex2b64(this.getPrivateBaseKey());\r\n    };\r\n    /**\r\n     * Translate rsa parameters in a hex encoded string representing the rsa public key.\r\n     * The representation follow the ASN.1 notation :\r\n     * PublicKeyInfo ::= SEQUENCE {\r\n     *   algorithm       AlgorithmIdentifier,\r\n     *   PublicKey       BIT STRING\r\n     * }\r\n     * Where AlgorithmIdentifier is:\r\n     * AlgorithmIdentifier ::= SEQUENCE {\r\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\r\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\r\n     * }\r\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\r\n     * RSAPublicKey ::= SEQUENCE {\r\n     *   modulus           INTEGER,  -- n\r\n     *   publicExponent    INTEGER   -- e\r\n     * }\r\n     * @returns {string} DER Encoded String representing the rsa public key\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.prototype.getPublicBaseKey = function () {\r\n        var first_sequence = new KJUR.asn1.DERSequence({\r\n            array: [\r\n                new KJUR.asn1.DERObjectIdentifier({ oid: \"1.2.840.113549.1.1.1\" }),\r\n                new KJUR.asn1.DERNull(),\r\n            ],\r\n        });\r\n        var second_sequence = new KJUR.asn1.DERSequence({\r\n            array: [\r\n                new KJUR.asn1.DERInteger({ bigint: this.n }),\r\n                new KJUR.asn1.DERInteger({ int: this.e }),\r\n            ],\r\n        });\r\n        var bit_string = new KJUR.asn1.DERBitString({\r\n            hex: \"00\" + second_sequence.getEncodedHex(),\r\n        });\r\n        var seq = new KJUR.asn1.DERSequence({\r\n            array: [first_sequence, bit_string],\r\n        });\r\n        return seq.getEncodedHex();\r\n    };\r\n    /**\r\n     * base64 (pem) encoded version of the DER encoded representation\r\n     * @returns {string} pem encoded representation without header and footer\r\n     * @public\r\n     */\r\n    JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {\r\n        return hex2b64(this.getPublicBaseKey());\r\n    };\r\n    /**\r\n     * wrap the string in block of width chars. The default value for rsa keys is 64\r\n     * characters.\r\n     * @param {string} str the pem encoded string without header and footer\r\n     * @param {Number} [width=64] - the length the string has to be wrapped at\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.wordwrap = function (str, width) {\r\n        width = width || 64;\r\n        if (!str) {\r\n            return str;\r\n        }\r\n        var regex = \"(.{1,\" + width + \"})( +|$\\n?)|(.{1,\" + width + \"})\";\r\n        return str.match(RegExp(regex, \"g\")).join(\"\\n\");\r\n    };\r\n    /**\r\n     * Retrieve the pem encoded private key\r\n     * @returns {string} the pem encoded private key with header/footer\r\n     * @public\r\n     */\r\n    JSEncryptRSAKey.prototype.getPrivateKey = function () {\r\n        var key = \"-----BEGIN RSA PRIVATE KEY-----\\n\";\r\n        key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + \"\\n\";\r\n        key += \"-----END RSA PRIVATE KEY-----\";\r\n        return key;\r\n    };\r\n    /**\r\n     * Retrieve the pem encoded public key\r\n     * @returns {string} the pem encoded public key with header/footer\r\n     * @public\r\n     */\r\n    JSEncryptRSAKey.prototype.getPublicKey = function () {\r\n        var key = \"-----BEGIN PUBLIC KEY-----\\n\";\r\n        key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + \"\\n\";\r\n        key += \"-----END PUBLIC KEY-----\";\r\n        return key;\r\n    };\r\n    /**\r\n     * Check if the object contains the necessary parameters to populate the rsa modulus\r\n     * and public exponent parameters.\r\n     * @param {Object} [obj={}] - An object that may contain the two public key\r\n     * parameters\r\n     * @returns {boolean} true if the object contains both the modulus and the public exponent\r\n     * properties (n and e)\r\n     * @todo check for types of n and e. N should be a parseable bigInt object, E should\r\n     * be a parseable integer number\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {\r\n        obj = obj || {};\r\n        return obj.hasOwnProperty(\"n\") && obj.hasOwnProperty(\"e\");\r\n    };\r\n    /**\r\n     * Check if the object contains ALL the parameters of an RSA key.\r\n     * @param {Object} [obj={}] - An object that may contain nine rsa key\r\n     * parameters\r\n     * @returns {boolean} true if the object contains all the parameters needed\r\n     * @todo check for types of the parameters all the parameters but the public exponent\r\n     * should be parseable bigint objects, the public exponent should be a parseable integer number\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {\r\n        obj = obj || {};\r\n        return (obj.hasOwnProperty(\"n\") &&\r\n            obj.hasOwnProperty(\"e\") &&\r\n            obj.hasOwnProperty(\"d\") &&\r\n            obj.hasOwnProperty(\"p\") &&\r\n            obj.hasOwnProperty(\"q\") &&\r\n            obj.hasOwnProperty(\"dmp1\") &&\r\n            obj.hasOwnProperty(\"dmq1\") &&\r\n            obj.hasOwnProperty(\"coeff\"));\r\n    };\r\n    /**\r\n     * Parse the properties of obj in the current rsa object. Obj should AT LEAST\r\n     * include the modulus and public exponent (n, e) parameters.\r\n     * @param {Object} obj - the object containing rsa parameters\r\n     * @private\r\n     */\r\n    JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {\r\n        this.n = obj.n;\r\n        this.e = obj.e;\r\n        if (obj.hasOwnProperty(\"d\")) {\r\n            this.d = obj.d;\r\n            this.p = obj.p;\r\n            this.q = obj.q;\r\n            this.dmp1 = obj.dmp1;\r\n            this.dmq1 = obj.dmq1;\r\n            this.coeff = obj.coeff;\r\n        }\r\n    };\r\n    return JSEncryptRSAKey;\r\n}(RSAKey));\r\nexport { JSEncryptRSAKey };\r\n", "var _a;\r\nimport { b64tohex, hex2b64 } from \"./lib/jsbn/base64\";\r\nimport { JSEncryptRSAKey } from \"./JSEncryptRSAKey\";\r\nvar version = typeof process !== 'undefined'\r\n    ? (_a = process.env) === null || _a === void 0 ? void 0 : _a.npm_package_version\r\n    : undefined;\r\n/**\r\n *\r\n * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour\r\n * possible parameters are:\r\n * - default_key_size        {number}  default: 1024 the key size in bit\r\n * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent\r\n * - log                     {boolean} default: false whether log warn/error or not\r\n * @constructor\r\n */\r\nvar JSEncrypt = /** @class */ (function () {\r\n    function JSEncrypt(options) {\r\n        if (options === void 0) { options = {}; }\r\n        options = options || {};\r\n        this.default_key_size = options.default_key_size\r\n            ? parseInt(options.default_key_size, 10)\r\n            : 1024;\r\n        this.default_public_exponent = options.default_public_exponent || \"010001\"; // 65537 default openssl public exponent for rsa key type\r\n        this.log = options.log || false;\r\n        // The private and public key.\r\n        this.key = null;\r\n    }\r\n    /**\r\n     * Method to set the rsa key parameter (one method is enough to set both the public\r\n     * and the private key, since the private key contains the public key paramenters)\r\n     * Log a warning if logs are enabled\r\n     * @param {Object|string} key the pem encoded string or an object (with or without header/footer)\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.setKey = function (key) {\r\n        if (this.log && this.key) {\r\n            console.warn(\"A key was already set, overriding existing.\");\r\n        }\r\n        this.key = new JSEncryptRSAKey(key);\r\n    };\r\n    /**\r\n     * Proxy method for setKey, for api compatibility\r\n     * @see setKey\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.setPrivateKey = function (privkey) {\r\n        // Create the key.\r\n        this.setKey(privkey);\r\n    };\r\n    /**\r\n     * Proxy method for setKey, for api compatibility\r\n     * @see setKey\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.setPublicKey = function (pubkey) {\r\n        // Sets the public key.\r\n        this.setKey(pubkey);\r\n    };\r\n    /**\r\n     * Proxy method for RSAKey object's decrypt, decrypt the string using the private\r\n     * components of the rsa key object. Note that if the object was not set will be created\r\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\r\n     * @param {string} str base64 encoded crypted string to decrypt\r\n     * @return {string} the decrypted string\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.decrypt = function (str) {\r\n        // Return the decrypted string.\r\n        try {\r\n            return this.getKey().decrypt(b64tohex(str));\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Proxy method for RSAKey object's encrypt, encrypt the string using the public\r\n     * components of the rsa key object. Note that if the object was not set will be created\r\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\r\n     * @param {string} str the string to encrypt\r\n     * @return {string} the encrypted string encoded in base64\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.encrypt = function (str) {\r\n        // Return the encrypted string.\r\n        try {\r\n            return hex2b64(this.getKey().encrypt(str));\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Proxy method for RSAKey object's sign.\r\n     * @param {string} str the string to sign\r\n     * @param {function} digestMethod hash method\r\n     * @param {string} digestName the name of the hash algorithm\r\n     * @return {string} the signature encoded in base64\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {\r\n        // return the RSA signature of 'str' in 'hex' format.\r\n        try {\r\n            return hex2b64(this.getKey().sign(str, digestMethod, digestName));\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Proxy method for RSAKey object's verify.\r\n     * @param {string} str the string to verify\r\n     * @param {string} signature the signature encoded in base64 to compare the string to\r\n     * @param {function} digestMethod hash method\r\n     * @return {boolean} whether the data and signature match\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.verify = function (str, signature, digestMethod) {\r\n        // Return the decrypted 'digest' of the signature.\r\n        try {\r\n            return this.getKey().verify(str, b64tohex(signature), digestMethod);\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object\r\n     * will be created and returned\r\n     * @param {callback} [cb] the callback to be called if we want the key to be generated\r\n     * in an async fashion\r\n     * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.getKey = function (cb) {\r\n        // Only create new if it does not exist.\r\n        if (!this.key) {\r\n            // Get a new private key.\r\n            this.key = new JSEncryptRSAKey();\r\n            if (cb && {}.toString.call(cb) === \"[object Function]\") {\r\n                this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);\r\n                return;\r\n            }\r\n            // Generate the key.\r\n            this.key.generate(this.default_key_size, this.default_public_exponent);\r\n        }\r\n        return this.key;\r\n    };\r\n    /**\r\n     * Returns the pem encoded representation of the private key\r\n     * If the key doesn't exists a new key will be created\r\n     * @returns {string} pem encoded representation of the private key WITH header and footer\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.getPrivateKey = function () {\r\n        // Return the private representation of this key.\r\n        return this.getKey().getPrivateKey();\r\n    };\r\n    /**\r\n     * Returns the pem encoded representation of the private key\r\n     * If the key doesn't exists a new key will be created\r\n     * @returns {string} pem encoded representation of the private key WITHOUT header and footer\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.getPrivateKeyB64 = function () {\r\n        // Return the private representation of this key.\r\n        return this.getKey().getPrivateBaseKeyB64();\r\n    };\r\n    /**\r\n     * Returns the pem encoded representation of the public key\r\n     * If the key doesn't exists a new key will be created\r\n     * @returns {string} pem encoded representation of the public key WITH header and footer\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.getPublicKey = function () {\r\n        // Return the private representation of this key.\r\n        return this.getKey().getPublicKey();\r\n    };\r\n    /**\r\n     * Returns the pem encoded representation of the public key\r\n     * If the key doesn't exists a new key will be created\r\n     * @returns {string} pem encoded representation of the public key WITHOUT header and footer\r\n     * @public\r\n     */\r\n    JSEncrypt.prototype.getPublicKeyB64 = function () {\r\n        // Return the private representation of this key.\r\n        return this.getKey().getPublicBaseKeyB64();\r\n    };\r\n    JSEncrypt.version = version;\r\n    return JSEncrypt;\r\n}());\r\nexport { JSEncrypt };\r\n", "import { JSEncrypt } from './JSEncrypt';\r\nexport { JSEncrypt };\r\nexport default JSEncrypt;\r\n"],
  "mappings": "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",
  "names": ["decoder", "Int10", "Stream", "ASN1", "max", "ASN1Tag", "BigInteger", "NullExp", "Classic", "Montgomery", "Barrett", "Arcfour", "SecureRandom", "RSAKey", "i", "h", "s", "d", "b", "JSEncryptRSAKey", "JSEncrypt"]
}
